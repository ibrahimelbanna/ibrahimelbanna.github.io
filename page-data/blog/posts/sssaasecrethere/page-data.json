{"componentChunkName":"component---src-templates-blogtemplate-js","path":"/blog/posts/sssaasecrethere/","webpackCompilationHash":"a4bf654f5e88b277f2ce","result":{"data":{"markdownRemark":{"html":"<p>Hi all, in this post I'll share with you some JavaScript code, that we can write it in another way,\nBoth are better.</p>\n<p><strong>1. Generate an array of sequential numbers <code class=\"language-text\">[1, 2, 3, ...., n]</code></strong></p>\n<p>If we want to generate an array like this <code class=\"language-text\">[1, 2, 3, 4, 5, 6, ...., n]</code>, We can write code using <code class=\"language-text\">new Array()</code> with\n<a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/fill\"><code class=\"language-text\">fill()</code></a> so it'll be</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-javascript line-numbers\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> <span class=\"token constant\">N</span> <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">new</span> <span class=\"token class-name\">Array</span><span class=\"token punctuation\">(</span><span class=\"token constant\">N</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">fill</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">_<span class=\"token punctuation\">,</span> indx</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> indx <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span></span></pre></div>\n<p><a href=\"https://docs.google.com/document/d/1FBxDuUJmUt_udO9ofJGXF4GAM2ZoiWI-PTEeq9Gbf1w/edit#heading=h.yf7gjfvrq7gx\"><em><strong>Why <code class=\"language-text\">new Array(N).map()</code> doesn't work?</strong></em></a></p>\n<p>Cool, But if we're working on a large array of sequential numbers, Is this method will be the best?\nMmmm, No! because <code class=\"language-text\">new Array()</code> creates <a href=\"https://v8.dev/blog/elements-kinds\">a holey array</a>\nwhich is slow compared to <a href=\"https://v8.dev/blog/elements-kinds\">packed arrays</a>. So we can avoid this and re-write this method\nusing <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/from\"><code class=\"language-text\">Array.from()</code></a>\nSo the code will be</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-javascript line-numbers\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> <span class=\"token constant\">N</span> <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\nArray<span class=\"token punctuation\">.</span><span class=\"token function\">from</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> length<span class=\"token punctuation\">:</span> <span class=\"token constant\">N</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">_<span class=\"token punctuation\">,</span> indx</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> indx <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span></span></pre></div>\n<figure style=\"margin: 15px\">\n    <img src=\"https://i.imgur.com/UWkajiz.png\" width=\"700px\" alt=\"new array()\" />\n    <i><figcaption>source: <a href=\"https://slidr.io/mathiasbynens/v8-internals-for-javascript-developers#102\">\n    https://slidrio-decks.global.ssl.fastly.net/1259/original.pdf?1521622174</a> <br />slide: 102</figcaption></i>\n</figure>\n<p>you can check the holey array in your Chrome Console, so if we write this <code class=\"language-text\">new Array(10)</code> your console will display\n<code class=\"language-text\">[empty Ã— 10]</code> which is an array of empty values.</p>\n<p>More Resources:</p>\n<ol>\n<li><a href=\"https://v8.dev/blog/elements-kinds\">https://v8.dev/blog/elements-kinds</a></li>\n<li><a href=\"https://stackoverflow.com/questions/3746725/how-to-create-an-array-containing-1-n\">https://stackoverflow.com/questions/3746725/how-to-create-an-array-containing-1-n</a></li>\n</ol>","fields":{"slug":"blog/posts/sssaasecrethere/"},"frontmatter":{"date":"September 09, 2019","title":"Another way to write your JavaScript","toArabic":null},"timeToRead":2,"wordCount":{"words":136}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"blog/posts/sssaasecrethere/","toArabic":null}}}