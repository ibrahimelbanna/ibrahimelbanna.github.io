{"version":3,"sources":["webpack:///./src/components/ArticleSummary.js","webpack:///./src/pages/blog.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./static/images/favicon.ico","webpack:///./src/components/seo.js","webpack:///./src/styles/modeStyles.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js"],"names":["ArticleSummary","_ref","excerpt","title","date","timeToRead","id","slug","react_default","a","createElement","style","marginBottom","width","marginLeft","marginRight","minWidth","className","fontSize","margin","gatsby_browser_entry","to","react_fontawesome_index_es","icon","faClock","blog","layout","seo","keywords","query","render","posts","allMarkdownRemark","edges","Fragment","display","flexDirection","alignItems","dist_index_es","screenName","map","_ref2","node","frontmatter","key","fields","data","_432827260","__webpack_require__","r","__webpack_exports__","d","graphql","StaticQueryContext","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3___default","_parse_path__WEBPACK_IMPORTED_MODULE_4__","React","createContext","props","Consumer","staticQueryData","children","Error","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","p","SEO","description","lang","meta","console","log","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_4__","detailsQuery","metaDescription","site","siteMetadata","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","_public_static_d_1025518380_json__WEBPACK_IMPORTED_MODULE_0__","defaultProps","array","arrayOf","dayStyles","color","nightStyles","Header","siteTitle","currentModeStyle","mode","src","Logo","height","alt","Layout","toggleMode","useEffect","document","body","backgroundColor","components_header","react_switch_default","checked","onChange","onColor","onHandleColor","handleDiameter","uncheckedIcon","checkedIcon","boxShadow","activeBoxShadow","maxWidth","padding","paddingTop","_2994927498","connect","dispatch","type"],"mappings":"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","file":"component---src-pages-blog-js-936b8b4e9e53490378f0.js","sourcesContent":["import React from \"react\";\nimport { faClock } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { Link } from \"gatsby\";\n\nexport default function ArticleSummary({\n  excerpt,\n  title,\n  date,\n  id,\n  timeToRead,\n  slug\n}) {\n  return (\n    <article\n      style={{\n        marginBottom: 55,\n        width: \"70%\",\n        marginLeft: \"auto\",\n        marginRight: \"auto\",\n        minWidth: 320\n      }}\n      className=\"article-summary article\"\n    >\n      <header>\n        <h3\n          style={{\n            fontSize: \"1.6em\",\n            margin: \"10px 0\"\n          }}\n        >\n          <Link to={slug}>{title}</Link>{\" \"}\n        </h3>\n        <small>\n          <span>{date}</span>\n          {\"   â€¢   \"}\n          <span>\n            <FontAwesomeIcon icon={faClock} />{\" \"}\n            {`${timeToRead} ${timeToRead > 1 ? \"mins\" : \"min\"} read`}\n          </span>\n        </small>\n      </header>\n      <p>{excerpt}</p>\n    </article>\n  );\n}\n","import React from \"react\";\nimport Layout from \"../components/layout\";\nimport SEO from \"../components/seo\";\nimport { StaticQuery, graphql } from \"gatsby\";\nimport ArticleSummary from \"../components/ArticleSummary\";\nimport { TwitterFollowButton } from \"react-twitter-embed\";\n\nexport default function blog() {\n  return (\n    <Layout>\n      <SEO title=\"Blog\" keywords={[`zeyadetman`, `blog`, \"technical\"]} />\n      <StaticQuery\n        query={graphql`\n          query retrievePosts {\n            allMarkdownRemark(\n              sort: { fields: [frontmatter___date], order: DESC }\n            ) {\n              edges {\n                node {\n                  id\n                  excerpt\n                  frontmatter {\n                    title\n                    date(formatString: \"MMMM DD, YYYY\")\n                  }\n                  timeToRead\n                  fields {\n                    slug\n                  }\n                  wordCount {\n                    words\n                  }\n                }\n              }\n            }\n          }\n        `}\n        render={({ allMarkdownRemark: { edges: posts } }) => {\n          return (\n            <>\n              <h1\n                style={{\n                  display: \"flex\",\n                  flexDirection: \"column\",\n                  alignItems: \"center\"\n                }}\n              >\n                Writings & Thoughts\n                <TwitterFollowButton screenName={\"zeyadetman\"} />\n              </h1>\n              {posts.map(({ node }) => (\n                <ArticleSummary\n                  title={node.frontmatter.title}\n                  date={node.frontmatter.date}\n                  id={node.id}\n                  timeToRead={node.timeToRead}\n                  excerpt={node.excerpt}\n                  key={node.id}\n                  slug={node.fields.slug}\n                />\n              ))}\n            </>\n          );\n        }}\n      />\n    </Layout>\n  );\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","module.exports = __webpack_public_path__ + \"static/favicon-536c95ef75715eb3b2253c240b66eaf4.ico\";","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Helmet from \"react-helmet\";\nimport { StaticQuery, graphql } from \"gatsby\";\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  console.log(title);\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={data => {\n        const metaDescription =\n          description || data.site.siteMetadata.description;\n        return (\n          <Helmet\n            htmlAttributes={{\n              lang\n            }}\n            title={title}\n            titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n            meta={[\n              {\n                name: `description`,\n                content: metaDescription\n              },\n              {\n                property: `og:title`,\n                content: title\n              },\n              {\n                property: `og:description`,\n                content: metaDescription\n              },\n              {\n                property: `og:type`,\n                content: `website`\n              },\n              {\n                name: `twitter:card`,\n                content: `summary`\n              },\n              {\n                name: `twitter:creator`,\n                content: data.site.siteMetadata.author\n              },\n              {\n                name: `twitter:title`,\n                content: title\n              },\n              {\n                name: `twitter:description`,\n                content: metaDescription\n              }\n            ]\n              .concat(\n                keywords.length > 0\n                  ? {\n                      name: `keywords`,\n                      content: keywords.join(`, `)\n                    }\n                  : []\n              )\n              .concat(meta)}\n          />\n        );\n      }}\n    />\n  );\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: []\n};\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired\n};\n\nexport default SEO;\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`;\n","export const dayStyles = {\n  style: {\n    color: \"rgb(36, 41, 46)\"\n  },\n  className: \"day-mode\"\n};\n\nexport const nightStyles = {\n  style: {\n    color: \"#fff\"\n  },\n  className: \"night-mode\"\n};\n","import { Link } from \"gatsby\";\nimport PropTypes from \"prop-types\";\nimport React, { useEffect } from \"react\";\nimport \"../styles/header.css\";\nimport Logo from \"../../static/images/favicon.ico\";\nimport { dayStyles, nightStyles } from \"../styles/modeStyles\";\n\nconst Header = ({ siteTitle, mode }) => {\n  const currentModeStyle = mode === \"day\" ? dayStyles : nightStyles;\n\n  return (\n    <header\n      {...currentModeStyle}\n      className={`${currentModeStyle.className} main-header`}\n    >\n      <div className=\"main-logo\">\n        <img\n          src={Logo}\n          style={{\n            marginBottom: 10,\n            marginRight: \"1em\",\n            width: 50,\n            height: 50\n          }}\n          alt=\"logo\"\n        />\n        <h1\n          style={{\n            marginRight: 15,\n            fontSize: \"1.7em\"\n          }}\n        >\n          <span style={{ color: \"#fdbd12\" }}>Z</span>eyad{\" \"}\n          <span style={{ color: \"#fdbd12\" }}>E</span>tman\n        </h1>\n      </div>\n      <ul>\n        <li>\n          <Link to=\"/\">home</Link>\n        </li>\n        <li>\n          <Link to=\"/projects\">projects</Link>\n        </li>\n        <li>\n          <Link to=\"/work\">work</Link>\n        </li>\n        <li>\n          <Link to=\"/blog\">blog</Link>\n        </li>\n        <li>\n          <Link to=\"/contact\">contact</Link>\n        </li>\n      </ul>\n    </header>\n  );\n};\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string\n};\n\nHeader.defaultProps = {\n  siteTitle: ``\n};\n\nexport default Header;\n","import React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { StaticQuery, graphql } from \"gatsby\";\nimport Switch from \"react-switch\";\nimport { dayStyles, nightStyles } from \"../styles/modeStyles\";\nimport Header from \"./header\";\nimport { connect } from \"react-redux\";\nimport \"../styles/global-styles.css\";\n\nconst Layout = ({ children, mode, toggleMode }) => {\n  const currentModeStyle = mode === \"day\" ? dayStyles : nightStyles;\n\n  useEffect(() => {\n    if (mode === \"night\") {\n      document.body.style.backgroundColor = \"#0e0e0e\";\n    } else {\n      document.body.style.backgroundColor = \"#fff\";\n    }\n  });\n\n  return (\n    <StaticQuery\n      query={graphql`\n        query SiteTitleQuery {\n          site {\n            siteMetadata {\n              title\n            }\n          }\n        }\n      `}\n      render={data => (\n        <div style={{ margin: \"0 auto\" }}>\n          <Header siteTitle={data.site.siteMetadata.title} mode={mode} />\n          <Switch\n            className=\"react-switch mode-toggle\"\n            checked={mode === \"day\"}\n            onChange={toggleMode}\n            onColor=\"#86d3ff\"\n            onHandleColor=\"#2693e6\"\n            handleDiameter={30}\n            uncheckedIcon={false}\n            checkedIcon={false}\n            boxShadow=\"0px 1px 5px rgba(0, 0, 0, 0.6)\"\n            activeBoxShadow=\"0px 0px 1px 10px rgba(0, 0, 0, 0.2)\"\n            height={20}\n            width={48}\n            id=\"material-switch\"\n          />\n          <div\n            style={{\n              margin: `0 auto`,\n              maxWidth: 960,\n              padding: `0px 1.0875rem 1.45rem`,\n              paddingTop: 0\n            }}\n          >\n            <main\n              {...currentModeStyle}\n              style={{\n                ...currentModeStyle.style,\n                ...{ margin: \"0 auto\" }\n              }}\n              mode={mode}\n            >\n              {children}\n            </main>\n          </div>\n        </div>\n      )}\n    />\n  );\n};\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired\n};\n\nconst mapStateToProps = ({ mode }) => {\n  return { mode };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return { toggleMode: () => dispatch({ type: `TOGGLE_MODE` }) };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Layout);\n"],"sourceRoot":""}