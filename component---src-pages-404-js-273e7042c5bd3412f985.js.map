{"version":3,"sources":["webpack:///./src/pages/404.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/styles/modeStyles.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/layout.js","webpack:///./src/components/header.js","webpack:///./static/images/favicon.ico","webpack:///./src/components/seo.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_layout__WEBPACK_IMPORTED_MODULE_1__","_components_seo__WEBPACK_IMPORTED_MODULE_2__","NotFoundPage","a","createElement","title","d","StaticQuery","gatsby_link__WEBPACK_IMPORTED_MODULE_1__","gatsby_link__WEBPACK_IMPORTED_MODULE_1___default","loader","enqueue","StaticQueryContext","React","createContext","StaticQueryDataRenderer","_ref","staticQueryData","data","query","render","finalData","Fragment","props","children","Consumer","m","module","exports","require","default","dayStyles","nightStyles","style","color","className","ProdPageRenderer","location","pageResources","InternalPageRenderer","Object","assign","json","ReactGA","initialize","window","pageview","pathname","search","connect","_ref2","mode","dispatch","toggleMode","type","currentPath","currentModeStyle","_useState","useState","global","localStorage","Number","isSaveBatteryMode","setSaveBatteryMode","useEffect","document","body","backgroundColor","react__WEBPACK_IMPORTED_MODULE_4___default","gatsby__WEBPACK_IMPORTED_MODULE_5__","margin","_header__WEBPACK_IMPORTED_MODULE_7__","siteTitle","site","siteMetadata","value","setItem","maxWidth","padding","paddingTop","_public_static_d_2994927498_json__WEBPACK_IMPORTED_MODULE_3__","Header","hideMenu","useMedia","hideMyName","_useReducer","useReducer","state","action","isShowMenuActive","batteryState","useBattery","level","charging","toggleEmoji","toMode","error","react__WEBPACK_IMPORTED_MODULE_1___default","src","Logo","marginRight","width","height","filter","marginBottom","alt","fontSize","display","alignItems","gatsby__WEBPACK_IMPORTED_MODULE_2__","to","activeClassName","partiallyActive","alignSelf","onClick","p","SEO","description","lang","meta","keywords","gatsby__WEBPACK_IMPORTED_MODULE_3__","detailsQuery","metaDescription","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","_public_static_d_1025518380_json__WEBPACK_IMPORTED_MODULE_0__","defaultProps"],"mappings":"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","file":"component---src-pages-404-js-273e7042c5bd3412f985.js","sourcesContent":["import React from \"react\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nconst NotFoundPage = () => (\n  <Layout>\n    <SEO title=\"404: Not found\" />\n    <h1>NOT FOUND</h1>\n    <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\n  </Layout>\n)\n\nexport default NotFoundPage\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","export const dayStyles = {\n  style: {\n    color: \"rgb(36, 41, 46)\"\n  },\n  className: \"day-mode\"\n};\n\nexport const nightStyles = {\n  style: {\n    color: \"#fff\"\n  },\n  className: \"night-mode\"\n};\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { StaticQuery, graphql } from \"gatsby\";\nimport { dayStyles, nightStyles } from \"../styles/modeStyles\";\nimport Header from \"./header\";\nimport { connect } from \"react-redux\";\nimport \"../styles/global-styles.css\";\nimport \"prismjs/plugins/line-numbers/prism-line-numbers.css\";\nimport \"prismjs/themes/prism-coy.css\";\nimport \"../styles/prism-override.scss\";\nimport ReactGA from \"react-ga\";\n\nReactGA.initialize(\"UA-50784035-2\");\nif (typeof window !== `undefined`) {\n  ReactGA.pageview(window.location.pathname + window.location.search);\n}\nconst Layout = ({ children, mode, toggleMode, currentPath }) => {\n  let currentModeStyle = mode === \"day\" ? dayStyles : nightStyles;\n  const [isSaveBatteryMode, setSaveBatteryMode] = useState(\n    (global &&\n      global.localStorage &&\n      Number(global.localStorage.isSaveBatteryMode)) ||\n      1\n  );\n\n  useEffect(() => {\n    if (mode === \"night\") {\n      currentModeStyle = nightStyles;\n      document.body.style.backgroundColor = \"#0e0e0e\";\n    } else {\n      currentModeStyle = dayStyles;\n      document.body.style.backgroundColor = \"#fff\";\n    }\n  }, [mode]);\n\n  return (\n    <StaticQuery\n      query={graphql`\n        query SiteTitleQuery {\n          site {\n            siteMetadata {\n              title\n            }\n          }\n        }\n      `}\n      render={data => (\n        <div style={{ margin: \"0 auto\" }}>\n          <Header\n            siteTitle={data.site.siteMetadata.title}\n            mode={mode}\n            currentPath={currentPath}\n            toggleMode={toggleMode}\n            isSaveBatteryMode={isSaveBatteryMode}\n            setSaveBatteryMode={value => {\n              localStorage.setItem(\"isSaveBatteryMode\", value ? 1 : 0);\n              setSaveBatteryMode(value);\n            }}\n          />\n          <div\n            style={{\n              margin: `0 auto`,\n              maxWidth: 960,\n              padding: `0px 1.0875rem 1.45rem`,\n              paddingTop: 0\n            }}>\n            <main\n              {...currentModeStyle}\n              style={{\n                ...currentModeStyle.style\n              }}\n              mode={mode}>\n              {children}\n            </main>\n          </div>\n        </div>\n      )}\n    />\n  );\n};\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired\n};\n\nconst mapStateToProps = ({ mode }) => {\n  return { mode };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return { toggleMode: () => dispatch({ type: `TOGGLE_MODE` }) };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Layout);\n","import React, { useState, useEffect, useReducer } from \"react\";\nimport { Link } from \"gatsby\";\nimport { useMedia } from \"use-media\";\nimport windowSize from \"react-window-size\";\nimport { dayStyles, nightStyles } from \"../styles/modeStyles\";\nimport \"../styles/header.css\";\nimport Logo from \"../../static/images/favicon.ico\";\nimport { useBattery } from \"react-use\";\nimport \"../utils/twemoji-awesome.css\";\n\nconst Header = ({\n  toggleMode,\n  mode,\n  currentPath,\n  isSaveBatteryMode,\n  setSaveBatteryMode\n}) => {\n  const currentModeStyle = mode === \"day\" ? dayStyles : nightStyles;\n  const hideMenu = useMedia({ maxWidth: \"1111px\" }, true);\n  const hideMyName = useMedia({ maxWidth: \"512px\" }, true);\n  const [state, dispatch] = useReducer(\n    (state, action) => {\n      if (action === \"TOGGLE_SHOW_MENU\") {\n        return { ...state, isShowMenuActive: !state.isShowMenuActive };\n      }\n    },\n    {\n      isShowMenuActive: false,\n      hideMenu,\n      hideMyName\n    }\n  );\n  let batteryState = useBattery();\n  if (!isSaveBatteryMode) {\n    batteryState = {};\n  }\n\n  useEffect(() => {\n    if (\n      \"isSupported\" in batteryState &&\n      \"level\" in batteryState &&\n      \"charging\" in batteryState &&\n      batteryState.level > 0.6 &&\n      batteryState.charging\n    ) {\n      setSaveBatteryMode(false);\n    } else if (\n      \"isSupported\" in batteryState &&\n      \"level\" in batteryState &&\n      \"charging\" in batteryState &&\n      batteryState.level < 0.25 &&\n      !batteryState.charging\n    ) {\n      if (mode === \"day\" && isSaveBatteryMode) {\n        toggleMode();\n      }\n    }\n  }, [batteryState]);\n\n  const toggleEmoji = toMode => {\n    toggleMode(toMode);\n    try {\n      localStorage.setItem(\"mode\", toMode);\n    } catch (error) {\n      return error;\n    }\n  };\n\n  return (\n    <header\n      {...currentModeStyle}\n      className={`${currentModeStyle.className} main-header`}>\n      <div className=\"main-logo\">\n        <img\n          src={Logo}\n          style={{\n            marginRight: \"1em\",\n            width: 35,\n            height: 35,\n            ...(mode === \"night\" ? { filter: \"invert(100%)\" } : {}),\n            ...(hideMyName ? {} : { marginBottom: 10 })\n          }}\n          alt=\"logo\"\n        />\n        {!state.isShowMenuActive && (\n          <React.Fragment>\n            <h1\n              style={{\n                fontSize: \"1.2em\"\n              }}\n              className=\"name-logo\">\n              {!hideMyName && `Zeyad Etman`}\n            </h1>\n          </React.Fragment>\n        )}\n      </div>\n\n      <div\n        style={{\n          display: \"flex\",\n          alignItems: \"center\"\n        }}>\n        {(state.isShowMenuActive || !hideMenu) && (\n          <ul>\n            <li>\n              <Link to=\"/\" activeClassName=\"active-page-link\">\n                home\n              </Link>\n            </li>\n            <li>\n              <Link to=\"/projects\" activeClassName=\"active-page-link\">\n                projects\n              </Link>\n            </li>\n            <li>\n              <Link to=\"/work\" activeClassName=\"active-page-link\">\n                work\n              </Link>\n            </li>\n            <li>\n              <Link\n                to=\"/blog\"\n                activeClassName=\"active-page-link\"\n                partiallyActive={true}>\n                blog\n              </Link>\n            </li>\n            <li>\n              <Link to=\"/snippets\" activeClassName=\"active-page-link\">\n                Snippets\n              </Link>\n            </li>\n            <li>\n              <Link to=\"/contact\" activeClassName=\"active-page-link\">\n                contact\n              </Link>\n            </li>\n          </ul>\n        )}\n\n        {hideMenu && (\n          <a\n            style={{\n              fontSize: \"1.5em\",\n              alignSelf: \"flex-end\",\n              marginRight: \"3px\"\n            }}\n            onClick={() => {\n              dispatch(\"TOGGLE_SHOW_MENU\");\n            }}>\n            &#9776;\n          </a>\n        )}\n\n        {mode === \"day\" ? (\n          <i\n            title=\"Day mode is on\"\n            onClick={() => toggleEmoji(\"night\")}\n            className=\"twa twa-sunny\"\n            style={{ fontSize: \"2em\" }}\n          />\n        ) : (\n          <i\n            title=\"Dark mode is on\"\n            onClick={() => toggleEmoji(\"day\")}\n            className=\"twa twa-new-moon\"\n            style={{ fontSize: \"2em\" }}\n          />\n        )}\n\n        {isSaveBatteryMode ? (\n          <i\n            title=\"Save battery mode is on\"\n            onClick={() => setSaveBatteryMode(false)}\n            className=\"twa twa-battery\"\n            style={{ fontSize: \"2em\" }}\n          />\n        ) : (\n          <i\n            title=\"Save battery mode is off\"\n            onClick={() => setSaveBatteryMode(true)}\n            className=\"twa twa-electric-plug\"\n            style={{ fontSize: \"2em\" }}\n          />\n        )}\n      </div>\n    </header>\n  );\n};\n\nexport default Header;\n","module.exports = __webpack_public_path__ + \"static/favicon-536c95ef75715eb3b2253c240b66eaf4.ico\";","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Helmet from \"react-helmet\";\nimport { StaticQuery, graphql } from \"gatsby\";\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={data => {\n        const metaDescription =\n          description || data.site.siteMetadata.description;\n        return (\n          <Helmet\n            htmlAttributes={{\n              lang\n            }}\n            title={title}\n            titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n            meta={[\n              {\n                name: `description`,\n                content: metaDescription\n              },\n              {\n                property: `og:title`,\n                content: title\n              },\n              {\n                property: `og:description`,\n                content: metaDescription\n              },\n              {\n                property: `og:type`,\n                content: `website`\n              },\n              {\n                name: `twitter:card`,\n                content: `summary`\n              },\n              {\n                name: `twitter:creator`,\n                content: data.site.siteMetadata.author\n              },\n              {\n                name: `twitter:title`,\n                content: title\n              },\n              {\n                name: `twitter:description`,\n                content: metaDescription\n              }\n            ]\n              .concat(\n                keywords.length > 0\n                  ? {\n                      name: `keywords`,\n                      content: keywords.join(`, `)\n                    }\n                  : []\n              )\n              .concat(meta)}\n          />\n        );\n      }}\n    />\n  );\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: []\n};\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired\n};\n\nexport default SEO;\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}