{"version":3,"sources":["webpack:///./src/pages/contact.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./static/images/favicon.ico","webpack:///./src/components/seo.js","webpack:///./src/styles/modeStyles.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js"],"names":["__webpack_require__","r","__webpack_exports__","d","Contact","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_layout__WEBPACK_IMPORTED_MODULE_1__","_components_seo__WEBPACK_IMPORTED_MODULE_2__","react_twitter_embed__WEBPACK_IMPORTED_MODULE_3__","_ref","pathname","location","a","createElement","currentPath","title","style","display","gridTemplateColumns","gridGap","gridColumn","textAlign","fontSize","fontWeight","background","lineHeight","color","screenName","options","size","StaticQuery","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","React","createContext","props","Consumer","staticQueryData","data","query","render","children","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","pageResources","loader","getResourcesForPathnameSync","InternalPageRenderer","Object","assign","json","shape","p","SEO","description","lang","meta","keywords","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_4__","detailsQuery","metaDescription","site","siteMetadata","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","_public_static_d_1025518380_json__WEBPACK_IMPORTED_MODULE_0__","defaultProps","array","arrayOf","dayStyles","className","nightStyles","Header","siteTitle","mode","currentModeStyle","_useState","useState","path","setPath","hideMenu","useMedia","maxWidth","hideMyName","_useReducer","useReducer","state","action","isShowMenuActive","dispatch","react_default","src","Logo","marginBottom","marginRight","width","height","filter","alt","Fragment","autoFocus","value","onChange","e","target","split","onKeyPress","key","indexOf","navigate","replace","gatsby_browser_entry","to","activeClassName","partiallyActive","href","onClick","Layout","toggleMode","useEffect","document","body","backgroundColor","margin","components_header","padding","paddingTop","_2994927498","node","connect","_ref2","type"],"mappings":"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","file":"component---src-pages-contact-js-d231d549c7e426aeea16.js","sourcesContent":["import React from \"react\";\nimport Layout from \"../components/layout\";\nimport SEO from \"../components/seo\";\nimport { TwitterFollowButton } from \"react-twitter-embed\";\n\nexport default function Contact({ location: { pathname } }) {\n  return (\n    <Layout currentPath={pathname}>\n      <SEO title=\"Contact\" />\n      <div\n        style={{\n          display: \"grid\",\n          gridTemplateColumns: \"repeat(auto-fill, minmax(250px, 1fr))\",\n          gridGap: 20\n        }}\n      >\n        <div\n          style={{\n            gridColumn: \"1/3\"\n          }}\n        >\n          <h1>Hi! It's my pleasure to hear from you.</h1>\n          <p>\n            I like code and anything related, I guess you too! so if you have\n            something to share with me, contact me:\n            <p\n              style={{\n                textAlign: \"center\",\n                fontSize: \"1.7em\",\n                fontWeight: 700,\n                background: \"linear-gradient(to right, #ffbf00, #ff6a00)\",\n                lineHeight: \"84px\",\n                color: \"#000\"\n              }}\n            >\n              zeyadetman@gmail.com\n            </p>\n          </p>\n        </div>\n        <div style={{ textAlign: \"center\" }}>\n          <h1>Wanna be friends?</h1>\n          <TwitterFollowButton\n            screenName={\"zeyadetman\"}\n            options={{ size: \"large\" }}\n          />\n        </div>\n      </div>\n    </Layout>\n  );\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","module.exports = __webpack_public_path__ + \"static/favicon-536c95ef75715eb3b2253c240b66eaf4.ico\";","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Helmet from \"react-helmet\";\nimport { StaticQuery, graphql } from \"gatsby\";\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={data => {\n        const metaDescription =\n          description || data.site.siteMetadata.description;\n        return (\n          <Helmet\n            htmlAttributes={{\n              lang\n            }}\n            title={title}\n            titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n            meta={[\n              {\n                name: `description`,\n                content: metaDescription\n              },\n              {\n                property: `og:title`,\n                content: title\n              },\n              {\n                property: `og:description`,\n                content: metaDescription\n              },\n              {\n                property: `og:type`,\n                content: `website`\n              },\n              {\n                name: `twitter:card`,\n                content: `summary`\n              },\n              {\n                name: `twitter:creator`,\n                content: data.site.siteMetadata.author\n              },\n              {\n                name: `twitter:title`,\n                content: title\n              },\n              {\n                name: `twitter:description`,\n                content: metaDescription\n              }\n            ]\n              .concat(\n                keywords.length > 0\n                  ? {\n                      name: `keywords`,\n                      content: keywords.join(`, `)\n                    }\n                  : []\n              )\n              .concat(meta)}\n          />\n        );\n      }}\n    />\n  );\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: []\n};\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired\n};\n\nexport default SEO;\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`;\n","export const dayStyles = {\n  style: {\n    color: \"rgb(36, 41, 46)\"\n  },\n  className: \"day-mode\"\n};\n\nexport const nightStyles = {\n  style: {\n    color: \"#fff\"\n  },\n  className: \"night-mode\"\n};\n","import React, { useState, useEffect, useReducer } from \"react\";\nimport { Link, navigate } from \"gatsby\";\nimport PropTypes from \"prop-types\";\nimport { useMedia } from \"use-media\";\nimport windowSize from \"react-window-size\";\nimport { dayStyles, nightStyles } from \"../styles/modeStyles\";\nimport \"../styles/header.css\";\nimport Logo from \"../../static/images/favicon.ico\";\n\nconst Header = ({ siteTitle, mode, currentPath }) => {\n  const currentModeStyle = mode === \"day\" ? dayStyles : nightStyles;\n  const [path, setPath] = useState(currentPath || \"404\");\n  const hideMenu = useMedia({ maxWidth: \"1111px\" }, true);\n  const hideMyName = useMedia({ maxWidth: \"512px\" }, true);\n\n  const [state, dispatch] = useReducer(\n    (state, action) => {\n      if (action === \"TOGGLE_SHOW_MENU\") {\n        return { ...state, isShowMenuActive: !state.isShowMenuActive };\n      }\n\n      // if (action === \"HIDE_MENU\") {\n      //   return { ...state, hideMenu: useMedia({ maxWidth: \"1111px\" }) };\n      // }\n\n      // if (action === \"HIDE_MY_NAME\") {\n      //   return { ...state, hideMyName: useMedia({ maxWidth: \"512px\" }) };\n      // }\n    },\n    {\n      isShowMenuActive: false,\n      hideMenu,\n      hideMyName\n    }\n  );\n\n  return (\n    <header\n      {...currentModeStyle}\n      className={`${currentModeStyle.className} main-header`}\n    >\n      <div className=\"main-logo\">\n        <img\n          src={Logo}\n          style={{\n            marginBottom: 10,\n            marginRight: \"1em\",\n            width: 35,\n            height: 35,\n            ...(mode === \"night\" ? { filter: \"invert(100%)\" } : {})\n          }}\n          alt=\"logo\"\n        />\n        {!state.isShowMenuActive && (\n          <React.Fragment>\n            <h1\n              style={{\n                fontSize: \"1.2em\"\n              }}\n              className=\"name-logo\"\n            >\n              {!hideMyName && `Zeyad Etman`} $\n            </h1>\n            <input\n              autoFocus\n              className=\"input-path\"\n              value={`cd ${path}`}\n              onChange={e => setPath(e.target.value.split(\" \")[1] || \"\")}\n              onKeyPress={e => {\n                if (e.key === \"Enter\") {\n                  setPath(e.target.value.split(\" \")[1]);\n                  path === \"..\" && currentPath.indexOf(\"posts\") !== -1\n                    ? navigate(currentPath.replace(\"/posts\", \"\").split(\"/\")[1])\n                    : navigate(path);\n                }\n              }}\n            />\n          </React.Fragment>\n        )}\n      </div>\n\n      {(state.isShowMenuActive || !hideMenu) && (\n        <ul>\n          <li>\n            <Link to=\"/\" activeClassName=\"active-page-link\">\n              home\n            </Link>\n          </li>\n          <li>\n            <Link to=\"/projects\" activeClassName=\"active-page-link\">\n              projects\n            </Link>\n          </li>\n          <li>\n            <Link to=\"/work\" activeClassName=\"active-page-link\">\n              work\n            </Link>\n          </li>\n          <li>\n            <Link\n              to=\"/blog\"\n              activeClassName=\"active-page-link\"\n              partiallyActive={true}\n            >\n              blog\n            </Link>\n          </li>\n          <li>\n            <Link to=\"/today-i-learned\" activeClassName=\"active-page-link\">\n              {state.isShowMenuActive ? \"til\" : \"today i learned\"}\n            </Link>\n          </li>\n          <li>\n            <Link to=\"/contact\" activeClassName=\"active-page-link\">\n              contact\n            </Link>\n          </li>\n        </ul>\n      )}\n\n      {hideMenu && (\n        <a\n          href=\"javascript:void(0)\"\n          style={{\n            fontSize: \"1.5em\"\n          }}\n          onClick={() => {\n            dispatch(\"TOGGLE_SHOW_MENU\");\n          }}\n        >\n          &#9776;\n        </a>\n      )}\n    </header>\n  );\n};\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string\n};\n\nHeader.defaultProps = {\n  siteTitle: ``\n};\n\nexport default Header;\n","import React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { StaticQuery, graphql } from \"gatsby\";\nimport Switch from \"react-switch\";\nimport { dayStyles, nightStyles } from \"../styles/modeStyles\";\nimport Header from \"./header\";\nimport { connect } from \"react-redux\";\nimport \"../styles/global-styles.css\";\nimport \"prismjs/plugins/line-numbers/prism-line-numbers.css\";\nimport \"prismjs/themes/prism-coy.css\";\nimport \"../styles/prism-override.scss\";\n\nconst Layout = ({ children, mode, toggleMode, currentPath }) => {\n  const currentModeStyle = mode === \"day\" ? dayStyles : nightStyles;\n\n  useEffect(() => {\n    if (mode === \"night\") {\n      document.body.style.backgroundColor = \"#0e0e0e\";\n    } else {\n      document.body.style.backgroundColor = \"#fff\";\n    }\n  }, [mode]);\n\n  return (\n    <StaticQuery\n      query={graphql`\n        query SiteTitleQuery {\n          site {\n            siteMetadata {\n              title\n            }\n          }\n        }\n      `}\n      render={data => (\n        <div style={{ margin: \"0 auto\" }}>\n          <Header\n            siteTitle={data.site.siteMetadata.title}\n            mode={mode}\n            currentPath={currentPath}\n          />\n          {/* <Switch\n            className=\"react-switch mode-toggle\"\n            checked={mode === \"day\" ? true : false}\n            onChange={e => {\n              const modeFormatter = e ? \"day\" : \"night\";\n              toggleMode(modeFormatter);\n              try {\n                localStorage.setItem(\"mode\", modeFormatter);\n              } catch (error) {\n                console.log(error);\n              }\n            }}\n            onColor=\"#86d3ff\"\n            onHandleColor=\"#2693e6\"\n            handleDiameter={30}\n            uncheckedIcon={false}\n            checkedIcon={false}\n            boxShadow=\"0px 1px 5px rgba(0, 0, 0, 0.6)\"\n            activeBoxShadow=\"0px 0px 1px 10px rgba(0, 0, 0, 0.2)\"\n            height={20}\n            width={48}\n            id=\"material-switch\"\n          /> */}\n          <div\n            style={{\n              margin: `0 auto`,\n              maxWidth: 960,\n              padding: `0px 1.0875rem 1.45rem`,\n              paddingTop: 0\n            }}\n          >\n            <main\n              {...currentModeStyle}\n              style={{\n                ...currentModeStyle.style\n              }}\n              mode={mode}\n            >\n              {children}\n            </main>\n          </div>\n        </div>\n      )}\n    />\n  );\n};\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired\n};\n\nconst mapStateToProps = ({ mode }) => {\n  return { mode };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return { toggleMode: () => dispatch({ type: `TOGGLE_MODE` }) };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Layout);\n"],"sourceRoot":""}