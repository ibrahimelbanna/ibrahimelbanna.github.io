{"version":3,"sources":["webpack:///./src/components/ArticleSummary.js","webpack:///./src/pages/blog.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./static/images/favicon.ico","webpack:///./src/components/seo.js","webpack:///./src/styles/modeStyles.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js"],"names":["ArticleSummary","_ref","excerpt","title","date","timeToRead","id","slug","react_default","a","createElement","style","marginBottom","width","marginLeft","marginRight","minWidth","borderBottom","className","fontSize","margin","gatsby_browser_entry","to","blog","pathname","location","layout","currentPath","seo","keywords","query","render","_ref2","posts","allMarkdownRemark","edges","Fragment","display","flexDirection","alignItems","index_es","screenName","map","_ref3","node","fields","includes","frontmatter","key","data","_432827260","__webpack_require__","d","__webpack_exports__","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","React","createContext","props","Consumer","staticQueryData","children","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","pageResources","loader","getResourcesForPathnameSync","InternalPageRenderer","Object","assign","json","shape","p","SEO","description","lang","meta","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_4__","detailsQuery","metaDescription","site","siteMetadata","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","_public_static_d_1025518380_json__WEBPACK_IMPORTED_MODULE_0__","defaultProps","array","arrayOf","dayStyles","color","nightStyles","Header","toggleMode","mode","currentModeStyle","hideMenu","useMedia","maxWidth","hideMyName","_useReducer","useReducer","state","action","isShowMenuActive","dispatch","toggleEmoji","toMode","localStorage","setItem","error","console","log","src","Logo","height","filter","alt","activeClassName","partiallyActive","href","alignSelf","onClick","ReactGA","initialize","window","pageview","search","Layout","useEffect","document","body","backgroundColor","components_header","siteTitle","padding","paddingTop","_2994927498","connect","type"],"mappings":"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","file":"component---src-pages-blog-js-120d352f221c5aa7098a.js","sourcesContent":["import React from \"react\";\n// import { faClock } from \"@fortawesome/free-solid-svg-icons\";\n// import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { Link } from \"gatsby\";\n\nexport default function ArticleSummary({\n  excerpt,\n  title,\n  date,\n  id,\n  timeToRead,\n  slug\n}) {\n  return (\n    <article\n      style={{\n        marginBottom: 55,\n        width: \"70%\",\n        marginLeft: \"auto\",\n        marginRight: \"auto\",\n        minWidth: 320,\n        borderBottom: \"2px solid #0095ff\"\n      }}\n      className=\"article-summary article\"\n    >\n      <header>\n        <h3\n          style={{\n            fontSize: \"1.6em\",\n            margin: \"10px 0\"\n          }}\n        >\n          <Link to={`/${slug}`}>{title}</Link>{\" \"}\n        </h3>\n        <small className=\"article-meta\">\n          <span>{date}</span>\n          {\"   â€¢   \"}\n          <span>\n            {/* <FontAwesomeIcon icon={faClock} />{\" \"} */}\n            {`${timeToRead} ${timeToRead > 1 ? \"mins\" : \"min\"} read`}\n          </span>\n        </small>\n      </header>\n      <p>{excerpt}</p>\n    </article>\n  );\n}\n","import React from \"react\";\nimport Layout from \"../components/layout\";\nimport SEO from \"../components/seo\";\nimport { StaticQuery, graphql } from \"gatsby\";\nimport ArticleSummary from \"../components/ArticleSummary\";\nimport { TwitterFollowButton } from \"react-twitter-embed\";\nimport \"../styles/blogpost.css\";\n\nexport default function blog({ location: { pathname } }) {\n  return (\n    <Layout currentPath={pathname}>\n      <SEO title=\"Blog\" keywords={[`zeyadetman`, `blog`, \"technical\"]} />\n      <StaticQuery\n        query={graphql`\n          query retrievePosts {\n            allMarkdownRemark(\n              sort: { fields: [frontmatter___date], order: DESC }\n            ) {\n              edges {\n                node {\n                  id\n                  excerpt\n                  frontmatter {\n                    title\n                    date(formatString: \"MMMM DD, YYYY\")\n                  }\n                  timeToRead\n                  fields {\n                    slug\n                  }\n                  wordCount {\n                    words\n                  }\n                }\n              }\n            }\n          }\n        `}\n        render={({ allMarkdownRemark: { edges: posts } }) => {\n          return (\n            <>\n              <h1\n                style={{\n                  display: \"flex\",\n                  flexDirection: \"column\",\n                  alignItems: \"center\"\n                }}\n              >\n                Writings & Thoughts\n                <TwitterFollowButton screenName={\"zeyadetman\"} />\n              </h1>\n              {posts.map(\n                ({ node }) =>\n                  !node.fields.slug.includes(\"/ar/\") && (\n                    <ArticleSummary\n                      title={node.frontmatter.title}\n                      date={node.frontmatter.date}\n                      id={node.id}\n                      timeToRead={node.timeToRead}\n                      excerpt={node.excerpt}\n                      key={node.id}\n                      slug={node.fields.slug}\n                    />\n                  )\n              )}\n            </>\n          );\n        }}\n      />\n    </Layout>\n  );\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  if (!pageResources) {\n    return null\n  }\n\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","module.exports = __webpack_public_path__ + \"static/favicon-536c95ef75715eb3b2253c240b66eaf4.ico\";","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Helmet from \"react-helmet\";\nimport { StaticQuery, graphql } from \"gatsby\";\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={data => {\n        const metaDescription =\n          description || data.site.siteMetadata.description;\n        return (\n          <Helmet\n            htmlAttributes={{\n              lang\n            }}\n            title={title}\n            titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n            meta={[\n              {\n                name: `description`,\n                content: metaDescription\n              },\n              {\n                property: `og:title`,\n                content: title\n              },\n              {\n                property: `og:description`,\n                content: metaDescription\n              },\n              {\n                property: `og:type`,\n                content: `website`\n              },\n              {\n                name: `twitter:card`,\n                content: `summary`\n              },\n              {\n                name: `twitter:creator`,\n                content: data.site.siteMetadata.author\n              },\n              {\n                name: `twitter:title`,\n                content: title\n              },\n              {\n                name: `twitter:description`,\n                content: metaDescription\n              }\n            ]\n              .concat(\n                keywords.length > 0\n                  ? {\n                      name: `keywords`,\n                      content: keywords.join(`, `)\n                    }\n                  : []\n              )\n              .concat(meta)}\n          />\n        );\n      }}\n    />\n  );\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: []\n};\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired\n};\n\nexport default SEO;\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`;\n","export const dayStyles = {\n  style: {\n    color: \"rgb(36, 41, 46)\"\n  },\n  className: \"day-mode\"\n};\n\nexport const nightStyles = {\n  style: {\n    color: \"#fff\"\n  },\n  className: \"night-mode\"\n};\n","import React, { useState, useEffect, useReducer } from \"react\";\nimport { Link } from \"gatsby\";\nimport PropTypes from \"prop-types\";\nimport { useMedia } from \"use-media\";\nimport windowSize from \"react-window-size\";\nimport { dayStyles, nightStyles } from \"../styles/modeStyles\";\nimport \"../styles/header.css\";\nimport Logo from \"../../static/images/favicon.ico\";\nimport '../utils/twemoji-awesome.css';\n\nconst Header = ({ toggleMode, mode, currentPath }) => {\n  const currentModeStyle = mode === \"day\" ? dayStyles : nightStyles;\n  const hideMenu = useMedia({ maxWidth: \"1111px\" }, true);\n  const hideMyName = useMedia({ maxWidth: \"512px\" }, true);\n\n  const [state, dispatch] = useReducer(\n    (state, action) => {\n      if (action === \"TOGGLE_SHOW_MENU\") {\n        return { ...state, isShowMenuActive: !state.isShowMenuActive };\n      }\n\n      // if (action === \"HIDE_MENU\") {\n      //   return { ...state, hideMenu: useMedia({ maxWidth: \"1111px\" }) };\n      // }\n\n      // if (action === \"HIDE_MY_NAME\") {\n      //   return { ...state, hideMyName: useMedia({ maxWidth: \"512px\" }) };\n      // }\n    },\n    {\n      isShowMenuActive: false,\n      hideMenu,\n      hideMyName\n    }\n  );\n\n  const toggleEmoji = toMode => {\n    toggleMode(toMode);\n    try {\n      localStorage.setItem(\"mode\", toMode);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return (\n    <header\n      {...currentModeStyle}\n      className={`${currentModeStyle.className} main-header`}\n    >\n      <div className=\"main-logo\">     \n        <img\n          src={Logo}\n          style={{\n            marginRight: \"1em\",\n            width: 35,\n            height: 35,\n            ...(mode === \"night\" ? { filter: \"invert(100%)\" } : {}),\n            ...(hideMyName ? {} : {marginBottom: 10})\n          }}\n          alt=\"logo\"\n        />\n        {!state.isShowMenuActive && (\n          <React.Fragment>\n            <h1\n              style={{\n                fontSize: \"1.2em\"\n              }}\n              className=\"name-logo\"\n            >\n              {!hideMyName && `Zeyad Etman`}\n            </h1>\n          </React.Fragment>\n        )}\n      </div>\n\n      <div\n        style={{\n          display: \"flex\",\n          alignItems: \"center\"\n        }}\n      >\n        {(state.isShowMenuActive || !hideMenu) && (\n          <ul>\n            <li>\n              <Link to=\"/\" activeClassName=\"active-page-link\">\n                home\n              </Link>\n            </li>\n            <li>\n              <Link to=\"/projects\" activeClassName=\"active-page-link\">\n                projects\n              </Link>\n            </li>\n            <li>\n              <Link to=\"/work\" activeClassName=\"active-page-link\">\n                work\n              </Link>\n            </li>\n            <li>\n              <Link\n                to=\"/blog\"\n                activeClassName=\"active-page-link\"\n                partiallyActive={true}\n              >\n                blog\n              </Link>\n            </li>\n            {/* <li>\n              <Link to=\"/today-i-learned\" activeClassName=\"active-page-link\">\n                {state.isShowMenuActive ? \"til\" : \"today i learned\"}\n              </Link>\n            </li> */}\n            <li>\n              <Link to=\"/contact\" activeClassName=\"active-page-link\">\n                contact\n              </Link>\n            </li>\n          </ul>\n        )}\n\n        {hideMenu && (\n          <a\n            href=\"javascript:void(0)\"\n            style={{\n              fontSize: \"1.5em\",\n              alignSelf: 'flex-end',\n              marginRight: '3px',\n            }}\n            onClick={() => {\n              dispatch(\"TOGGLE_SHOW_MENU\");\n            }}\n          >\n            &#9776;\n          </a>\n        )}\n\n        {\n          mode === \"day\" ? (\n            <i\n              key={mode}\n              onClick={() => toggleEmoji(\"night\")}\n              className=\"twa twa-sunny\"\n              style={{ fontSize: \"2em\" }}\n            />\n          ) : (\n            <i\n              key={mode}\n              onClick={() => toggleEmoji(\"day\")}\n              className=\"twa twa-new-moon\"\n              style={{ fontSize: \"2em\" }}\n            />\n          )\n        }\n\n      </div>\n    </header>\n  );\n};\n\nexport default Header;\n","import React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { StaticQuery, graphql } from \"gatsby\";\nimport { dayStyles, nightStyles } from \"../styles/modeStyles\";\nimport Header from \"./header\";\nimport { connect } from \"react-redux\";\nimport \"../styles/global-styles.css\";\nimport \"prismjs/plugins/line-numbers/prism-line-numbers.css\";\nimport \"prismjs/themes/prism-coy.css\";\nimport \"../styles/prism-override.scss\";\nimport ReactGA from 'react-ga';\n\nReactGA.initialize('UA-50784035-2');\nif (typeof window !== `undefined`) {\n  ReactGA.pageview(window.location.pathname + window.location.search);\n}\nconst Layout = ({ children, mode, toggleMode, currentPath }) => {\n  let currentModeStyle = mode === \"day\" ? dayStyles : nightStyles;\n\n  useEffect(() => {\n    if (mode === \"night\") {\n      currentModeStyle = nightStyles;\n      document.body.style.backgroundColor = \"#0e0e0e\";\n    } else {\n      currentModeStyle = dayStyles;\n      document.body.style.backgroundColor = \"#fff\";\n    }\n  }, [mode]);\n\n  return (\n    <StaticQuery\n      query={graphql`\n        query SiteTitleQuery {\n          site {\n            siteMetadata {\n              title\n            }\n          }\n        }\n      `}\n      render={data => (\n        <div style={{ margin: \"0 auto\" }}>\n          <Header\n            siteTitle={data.site.siteMetadata.title}\n            mode={mode}\n            currentPath={currentPath}\n            toggleMode={toggleMode}\n          />\n          <div\n            style={{\n              margin: `0 auto`,\n              maxWidth: 960,\n              padding: `0px 1.0875rem 1.45rem`,\n              paddingTop: 0\n            }}\n          >\n            <main\n              {...currentModeStyle}\n              style={{\n                ...currentModeStyle.style\n              }}\n              mode={mode}\n            >\n              {children}\n            </main>\n          </div>\n        </div>\n      )}\n    />\n  );\n};\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired\n};\n\nconst mapStateToProps = ({ mode }) => {\n  return { mode };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return { toggleMode: () => dispatch({ type: `TOGGLE_MODE` }) };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Layout);\n"],"sourceRoot":""}