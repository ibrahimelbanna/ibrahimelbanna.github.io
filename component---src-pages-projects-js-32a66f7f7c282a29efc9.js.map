{"version":3,"sources":["webpack:///./src/pages/projects.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/images/favicon.ico","webpack:///./src/components/seo.js","webpack:///./src/styles/modeStyles.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js"],"names":["__webpack_require__","r","__webpack_exports__","d","projects","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_layout__WEBPACK_IMPORTED_MODULE_1__","_components_seo__WEBPACK_IMPORTED_MODULE_2__","_ref","mode","a","createElement","title","graphql","StaticQueryContext","StaticQuery","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3___default","_parse_path__WEBPACK_IMPORTED_MODULE_4__","React","createContext","props","Consumer","staticQueryData","data","query","render","children","Error","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","p","SEO","description","lang","meta","keywords","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_4__","detailsQuery","metaDescription","site","siteMetadata","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","_public_static_d_1025518380_json__WEBPACK_IMPORTED_MODULE_0__","defaultProps","array","arrayOf","dayStyles","style","color","className","nightStyles","Header","siteTitle","currentModeStyle","react_default","src","Logo","marginBottom","marginRight","width","height","alt","fontSize","gatsby_browser_entry","to","Layout","toggleMode","useEffect","document","body","backgroundColor","margin","components_header","react_switch_default","checked","onChange","onColor","onHandleColor","handleDiameter","uncheckedIcon","checkedIcon","boxShadow","activeBoxShadow","id","maxWidth","padding","paddingTop","_2994927498","node","connect","_ref2","dispatch","type"],"mappings":"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","file":"component---src-pages-projects-js-32a66f7f7c282a29efc9.js","sourcesContent":["import React from \"react\";\nimport Layout from \"../components/layout\";\nimport SEO from \"../components/seo\";\n\nexport default function projects({ mode }) {\n  return (\n    <Layout>\n      <SEO title=\"Projects\" />\n      sss\n    </Layout>\n  );\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","module.exports = __webpack_public_path__ + \"static/favicon-536c95ef75715eb3b2253c240b66eaf4.ico\";","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { StaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={data => {\n        const metaDescription =\n          description || data.site.siteMetadata.description\n        return (\n          <Helmet\n            htmlAttributes={{\n              lang,\n            }}\n            title={title}\n            titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n            meta={[\n              {\n                name: `description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:title`,\n                content: title,\n              },\n              {\n                property: `og:description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:type`,\n                content: `website`,\n              },\n              {\n                name: `twitter:card`,\n                content: `summary`,\n              },\n              {\n                name: `twitter:creator`,\n                content: data.site.siteMetadata.author,\n              },\n              {\n                name: `twitter:title`,\n                content: title,\n              },\n              {\n                name: `twitter:description`,\n                content: metaDescription,\n              },\n            ]\n              .concat(\n                keywords.length > 0\n                  ? {\n                      name: `keywords`,\n                      content: keywords.join(`, `),\n                    }\n                  : []\n              )\n              .concat(meta)}\n          />\n        )\n      }}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`\n","export const dayStyles = {\n  style: {\n    color: \"rgb(36, 41, 46)\"\n  },\n  className: \"day-mode\"\n};\n\nexport const nightStyles = {\n  style: {\n    color: \"#fff\"\n  },\n  className: \"night-mode\"\n};\n","import { Link } from \"gatsby\";\nimport PropTypes from \"prop-types\";\nimport React, { useEffect } from \"react\";\nimport \"../styles/header.css\";\nimport Logo from \"../images/favicon.ico\";\nimport { dayStyles, nightStyles } from \"../styles/modeStyles\";\n\nconst Header = ({ siteTitle, mode }) => {\n  const currentModeStyle = mode === \"day\" ? dayStyles : nightStyles;\n\n  return (\n    <header\n      {...currentModeStyle}\n      className={`${currentModeStyle.className} main-header`}\n    >\n      <div className=\"main-logo\">\n        <img\n          src={Logo}\n          style={{\n            marginBottom: 10,\n            marginRight: \"1em\",\n            width: 50,\n            height: 50\n          }}\n          alt=\"logo\"\n        />\n        <h1\n          style={{\n            marginRight: 15,\n            fontSize: \"1.7em\"\n          }}\n        >\n          <span style={{ color: \"#fdbd12\" }}>Z</span>eyad{\" \"}\n          <span style={{ color: \"#fdbd12\" }}>E</span>tman\n        </h1>\n      </div>\n      <ul>\n        <li>\n          <Link to=\"/\">/home/</Link>\n        </li>\n        <li>\n          <Link to=\"/projects\">/projects/</Link>\n        </li>\n        <li>\n          <Link to=\"/work\">/work/</Link>\n        </li>\n        <li>\n          <Link to=\"/blog\">/blog/</Link>\n        </li>\n        <li>\n          <Link to=\"/about\">/about/</Link>\n        </li>\n      </ul>\n    </header>\n  );\n};\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string\n};\n\nHeader.defaultProps = {\n  siteTitle: ``\n};\n\nexport default Header;\n","import React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { StaticQuery, graphql } from \"gatsby\";\nimport Switch from \"react-switch\";\nimport { dayStyles, nightStyles } from \"../styles/modeStyles\";\nimport Header from \"./header\";\nimport { connect } from \"react-redux\";\n\nconst Layout = ({ children, mode, toggleMode }) => {\n  const currentModeStyle = mode === \"day\" ? dayStyles : nightStyles;\n\n  useEffect(() => {\n    if (mode === \"night\") {\n      document.body.style.backgroundColor = \"#0e0e0e\";\n    } else {\n      document.body.style.backgroundColor = \"#fff\";\n    }\n  });\n\n  return (\n    <StaticQuery\n      query={graphql`\n        query SiteTitleQuery {\n          site {\n            siteMetadata {\n              title\n            }\n          }\n        }\n      `}\n      render={data => (\n        <div style={{ margin: \"0 auto\" }}>\n          <Header siteTitle={data.site.siteMetadata.title} mode={mode} />\n          <Switch\n            className=\"react-switch mode-toggle\"\n            checked={mode === \"day\"}\n            onChange={toggleMode}\n            onColor=\"#86d3ff\"\n            onHandleColor=\"#2693e6\"\n            handleDiameter={30}\n            uncheckedIcon={false}\n            checkedIcon={false}\n            boxShadow=\"0px 1px 5px rgba(0, 0, 0, 0.6)\"\n            activeBoxShadow=\"0px 0px 1px 10px rgba(0, 0, 0, 0.2)\"\n            height={20}\n            width={48}\n            id=\"material-switch\"\n          />\n          <div\n            style={{\n              margin: `0 auto`,\n              maxWidth: 960,\n              padding: `0px 1.0875rem 1.45rem`,\n              paddingTop: 0\n            }}\n          >\n            <main\n              {...currentModeStyle}\n              style={{\n                ...currentModeStyle.style,\n                ...{ margin: \"0 auto\" }\n              }}\n            >\n              {children}\n            </main>\n          </div>\n        </div>\n      )}\n    />\n  );\n};\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired\n};\n\nconst mapStateToProps = ({ mode }) => {\n  return { mode };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return { toggleMode: () => dispatch({ type: `TOGGLE_MODE` }) };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Layout);\n"],"sourceRoot":""}