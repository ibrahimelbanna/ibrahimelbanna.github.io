{"version":3,"sources":["webpack:///./src/templates/blogtemplate.js"],"names":["Template","_ref","markdownRemark","data","frontmatter","html","slug","fields","timeToRead","toArabic","wordCount","react__WEBPACK_IMPORTED_MODULE_4___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_6__","currentPath","_components_seo__WEBPACK_IMPORTED_MODULE_9__","title","className","style","width","margin","minWidth","borderBottom","paddingBottom","Object","assign","fontSize","includes","direction","date","border","padding","marginBottom","gatsby__WEBPACK_IMPORTED_MODULE_5__","to","replace","dangerouslySetInnerHTML","__html","textAlign","react_twitter_embed__WEBPACK_IMPORTED_MODULE_8__","url","encodeURI","options","text","via","size","pageQuery"],"mappings":"yQASe,SAASA,EAATC,GAEZ,IACOC,EADPD,EADDE,KAEQD,eAENE,EAKEF,EALFE,YACAC,EAIEH,EAJFG,KACUC,EAGRJ,EAHFK,OAAUD,KACVE,EAEEN,EAFFM,WAGMC,GADJP,EADFQ,UAEmBN,EAAbK,UAER,OACEE,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQC,YAAW,IAAMT,GACvBK,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAKC,MAAOb,EAAYa,QACxBN,EAAAC,EAAAC,cAAA,WACEK,UAAU,8BACVC,MAAO,CAAEC,MAAO,MAAOC,OAAQ,SAAUC,SAAU,MAEnDX,EAAAC,EAAAC,cAAA,UACEM,MAAO,CACLI,aAAc,aACdC,cAAe,KAGjBb,EAAAC,EAAAC,cAAA,MACEM,MAAKM,OAAAC,OAAA,CACHC,SAAU,QACVN,OAAQ,UACJf,EAAKsB,SAAS,SAAWnB,GAAY,CAAEoB,UAAW,SAGvDzB,EAAYa,OAEfN,EAAAC,EAAAC,cAAA,SAAOK,UAAU,gBACfP,EAAAC,EAAAC,cAAA,YAAOT,EAAY0B,MAClB,UACDnB,EAAAC,EAAAC,cAAA,YAEML,EAFN,KAEoBA,EAAa,EAAI,OAAS,OAF9C,UAKDC,GACCE,EAAAC,EAAAC,cAAA,KACEM,MAAO,CACLY,OAAQ,aACRC,QAAS,GACTC,aAAc,KAGd3B,EAAKsB,SAAS,SAAWnB,GACzBE,EAAAC,EAAAC,cAACqB,EAAA,EAAD,CAAMC,GAAE,IAAM7B,EAAN,OAAR,wBAEDA,EAAKsB,SAAS,SAAWnB,GACxBE,EAAAC,EAAAC,cAACqB,EAAA,EAAD,CAAMC,GAAE,IAAM7B,EAAK8B,QAAQ,OAAQ,KAAnC,2BAORzB,EAAAC,EAAAC,cAAA,OACEM,MAAKM,OAAAC,OAAA,GACCpB,EAAKsB,SAAS,SAAWnB,GAAY,CAAEoB,UAAW,QAExDX,UAAU,oBACVmB,wBAAyB,CAAEC,OAAQjC,KAErCM,EAAAC,EAAAC,cAAA,UACEM,MAAO,CACLoB,UAAW,WAGb5B,EAAAC,EAAAC,cAAC2B,EAAA,EAAD,CACEC,IAAG,gCAAkCC,UAAUpC,GAC/CqC,QAAS,CACPC,KAAMxC,EAAYa,MAClB4B,IAAK,aACLC,KAAM,cASb,IAAMC,EAAS","file":"component---src-templates-blogtemplate-js-b5b6d581600fa2b023fd.js","sourcesContent":["import React, { useEffect } from \"react\";\nimport { graphql, Link } from \"gatsby\";\nimport Layout from \"../components/layout\";\n// import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n// import { faClock } from \"@fortawesome/free-solid-svg-icons\";\nimport \"../styles/blogpost.css\";\nimport { TwitterShareButton } from \"react-twitter-embed\";\nimport SEO from \"../components/seo\";\n\nexport default function Template({\n  data // this prop will be injected by the GraphQL query below.\n}) {\n  const { markdownRemark } = data; // data.markdownRemark holds our post data\n  const {\n    frontmatter,\n    html,\n    fields: { slug },\n    timeToRead,\n    wordCount\n  } = markdownRemark;\n  const { toArabic } = frontmatter;\n\n  return (\n    <Layout currentPath={`/${slug}`}>\n      <SEO title={frontmatter.title} />\n      <article\n        className=\"blog-post-container article\"\n        style={{ width: \"70%\", margin: \"0 auto\", minWidth: 320 }}\n      >\n        <header\n          style={{\n            borderBottom: \"2px dashed\",\n            paddingBottom: 15\n          }}\n        >\n          <h3\n            style={{\n              fontSize: \"1.6em\",\n              margin: \"10px 0\",\n              ...(slug.includes(\"/ar/\") && toArabic && { direction: \"rtl\" })\n            }}\n          >\n            {frontmatter.title}\n          </h3>\n          <small className=\"article-meta\">\n            <span>{frontmatter.date}</span>\n            {\"   â€¢   \"}\n            <span>\n              {/* <FontAwesomeIcon icon={faClock} />{\" \"} */}\n              {`${timeToRead} ${timeToRead > 1 ? \"mins\" : \"min\"} read`}\n            </span>\n          </small>\n          {toArabic && (\n            <p\n              style={{\n                border: \"1px dashed\",\n                padding: 10,\n                marginBottom: 0\n              }}\n            >\n              {!slug.includes(\"/ar/\") && toArabic && (\n                <Link to={`/${slug}ar/`}>Translated to Arabic</Link>\n              )}\n              {slug.includes(\"/ar/\") && toArabic && (\n                <Link to={`/${slug.replace(\"/ar/\", \"\")}`}>\n                  Translated to English\n                </Link>\n              )}\n            </p>\n          )}\n        </header>\n        <div\n          style={{\n            ...(slug.includes(\"/ar/\") && toArabic && { direction: \"rtl\" })\n          }}\n          className=\"blog-post-content\"\n          dangerouslySetInnerHTML={{ __html: html }}\n        />\n        <footer\n          style={{\n            textAlign: \"center\"\n          }}\n        >\n          <TwitterShareButton\n            url={`https://zeyadetman.github.io/${encodeURI(slug)}`}\n            options={{\n              text: frontmatter.title,\n              via: \"zeyadetman\",\n              size: \"large\"\n            }}\n          />\n        </footer>\n      </article>\n    </Layout>\n  );\n}\n\nexport const pageQuery = graphql`\n  query($slug: String!) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      html\n      fields {\n        slug\n      }\n      frontmatter {\n        date(formatString: \"MMMM DD, YYYY\")\n        title\n        toArabic\n      }\n      timeToRead\n      wordCount {\n        words\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}