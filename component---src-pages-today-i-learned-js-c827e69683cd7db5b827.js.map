{"version":3,"sources":["webpack:///./src/pages/today-i-learned.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./static/images/favicon.ico","webpack:///./src/components/seo.js","webpack:///./src/styles/modeStyles.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js"],"names":["connect","_ref2","mode","_ref","pathname","location","tils","title","date","body","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","height","style","width","scrolling","src","frameBorder","allowtransparency","allowFullScreen","href","_components_layout__WEBPACK_IMPORTED_MODULE_2__","currentPath","_components_seo__WEBPACK_IMPORTED_MODULE_3__","display","flexDirection","alignItems","marginTop","alt","gridTemplateColumns","gridGap","map","tip","tipId","replace","toLowerCase","className","key","marginBottom","paddingLeft","id","dateTime","textAlign","react_twitter_embed__WEBPACK_IMPORTED_MODULE_6__","url","options","text","via","size","__webpack_require__","d","__webpack_exports__","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","React","createContext","props","Consumer","staticQueryData","data","query","render","children","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","pageResources","loader","getResourcesForPathnameSync","InternalPageRenderer","Object","assign","json","shape","p","SEO","description","lang","meta","keywords","gatsby__WEBPACK_IMPORTED_MODULE_4__","detailsQuery","metaDescription","site","siteMetadata","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","_public_static_d_1025518380_json__WEBPACK_IMPORTED_MODULE_0__","defaultProps","array","arrayOf","dayStyles","color","nightStyles","Header","siteTitle","currentModeStyle","_useState","useState","path","setPath","hideMenu","useMedia","maxWidth","hideMyName","_useReducer","useReducer","state","action","isShowMenuActive","dispatch","react_default","Logo","marginRight","filter","Fragment","fontSize","autoFocus","value","onChange","e","target","split","onKeyPress","indexOf","navigate","gatsby_browser_entry","to","activeClassName","partiallyActive","onClick","Layout","toggleMode","useEffect","document","backgroundColor","margin","components_header","padding","paddingTop","_2994927498","node","type"],"mappings":"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","file":"component---src-pages-today-i-learned-js-c827e69683cd7db5b827.js","sourcesContent":["import React from \"react\";\nimport Layout from \"../components/layout\";\nimport SEO from \"../components/seo\";\nimport \"../styles/projects.css\";\nimport { connect } from \"react-redux\";\nimport { TwitterShareButton } from \"react-twitter-embed\";\n\nconst Til = ({ mode, location: { pathname } }) => {\n  const tils = [\n    {\n      title: \"Gradient text style in CSS\",\n      date: \"2019-03-08\",\n      body: (\n        <iframe\n          height=\"265\"\n          style={{ width: \"100%\" }}\n          scrolling=\"no\"\n          title=\"gradient text hover\"\n          src=\"//codepen.io/zeyadetman/embed/preview/rRydWv/?height=265&theme-id=dark&default-tab=css,result\"\n          frameBorder=\"no\"\n          allowtransparency=\"true\"\n          allowFullScreen={true}\n        >\n          See the Pen{\" \"}\n          <a href=\"https://codepen.io/zeyadetman/pen/rRydWv/\">\n            gradient text hover\n          </a>{\" \"}\n          by Zeyad Etman (\n          <a href=\"https://codepen.io/zeyadetman\">@zeyadetman</a>) on{\" \"}\n          <a href=\"https://codepen.io\">CodePen</a>.\n        </iframe>\n      )\n    }\n  ];\n  return (\n    <Layout currentPath={pathname}>\n      <SEO title=\"Today I Learned\" />\n      <h1\n        style={{\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignItems: \"center\"\n        }}\n      >\n        Today I Learned\n        <a\n          style={{ marginTop: 5 }}\n          href=\"https://stackexchange.com/users/6213143/zeyad-etman\"\n        >\n          <img\n            src={`https://stackexchange.com/users/flair/6213143.png?theme=${\n              mode === \"night\" ? \"dark\" : \"day\"\n            }`}\n            width=\"208\"\n            height=\"58\"\n            alt=\"profile for Zeyad Etman on Stack Exchange, a network of free, community-driven Q&amp;A sites\"\n            title=\"profile for Zeyad Etman on Stack Exchange, a network of free, community-driven Q&amp;A sites\"\n          />\n        </a>\n      </h1>\n      <div\n        style={{\n          display: \"grid\",\n          gridTemplateColumns: \"repeat(auto-fill, minmax(320px, 1fr))\",\n          gridGap: 15\n        }}\n      >\n        {tils.map(tip => {\n          const tipId = tip.title.replace(/ /g, \"\").toLowerCase();\n          return (\n            <div className=\"card\" key={tip.title}>\n              <h2 style={{ marginBottom: 5, paddingLeft: 10 }} id={tipId}>\n                {tip.title}\n              </h2>\n              <time style={{ paddingLeft: 10 }} dateTime={tip.date}>\n                {tip.date}\n              </time>\n              <div\n                style={{\n                  marginTop: 25\n                }}\n              >\n                {tip.body}\n              </div>\n              <div\n                style={{\n                  textAlign: \"center\"\n                }}\n              >\n                <TwitterShareButton\n                  url={`https://zeyadetman.github.io/today-i-learned/#${tipId}`}\n                  options={{\n                    text: `TIL: ${tip.title}`,\n                    via: \"zeyadetman\",\n                    size: \"large\"\n                  }}\n                />\n              </div>\n            </div>\n          );\n        })}\n      </div>\n    </Layout>\n  );\n};\n\nconst mapStateToProps = ({ mode }) => {\n  return { mode };\n};\n\nexport default connect(mapStateToProps)(Til);\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","module.exports = __webpack_public_path__ + \"static/favicon-536c95ef75715eb3b2253c240b66eaf4.ico\";","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Helmet from \"react-helmet\";\nimport { StaticQuery, graphql } from \"gatsby\";\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={data => {\n        const metaDescription =\n          description || data.site.siteMetadata.description;\n        return (\n          <Helmet\n            htmlAttributes={{\n              lang\n            }}\n            title={title}\n            titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n            meta={[\n              {\n                name: `description`,\n                content: metaDescription\n              },\n              {\n                property: `og:title`,\n                content: title\n              },\n              {\n                property: `og:description`,\n                content: metaDescription\n              },\n              {\n                property: `og:type`,\n                content: `website`\n              },\n              {\n                name: `twitter:card`,\n                content: `summary`\n              },\n              {\n                name: `twitter:creator`,\n                content: data.site.siteMetadata.author\n              },\n              {\n                name: `twitter:title`,\n                content: title\n              },\n              {\n                name: `twitter:description`,\n                content: metaDescription\n              }\n            ]\n              .concat(\n                keywords.length > 0\n                  ? {\n                      name: `keywords`,\n                      content: keywords.join(`, `)\n                    }\n                  : []\n              )\n              .concat(meta)}\n          />\n        );\n      }}\n    />\n  );\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: []\n};\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired\n};\n\nexport default SEO;\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`;\n","export const dayStyles = {\n  style: {\n    color: \"rgb(36, 41, 46)\"\n  },\n  className: \"day-mode\"\n};\n\nexport const nightStyles = {\n  style: {\n    color: \"#fff\"\n  },\n  className: \"night-mode\"\n};\n","import React, { useState, useEffect, useReducer } from \"react\";\nimport { Link, navigate } from \"gatsby\";\nimport PropTypes from \"prop-types\";\nimport { useMedia } from \"use-media\";\nimport windowSize from \"react-window-size\";\nimport { dayStyles, nightStyles } from \"../styles/modeStyles\";\nimport \"../styles/header.css\";\nimport Logo from \"../../static/images/favicon.ico\";\n\nconst Header = ({ siteTitle, mode, currentPath }) => {\n  const currentModeStyle = mode === \"day\" ? dayStyles : nightStyles;\n  const [path, setPath] = useState(currentPath || \"404\");\n  const hideMenu = useMedia({ maxWidth: \"1111px\" }, true);\n  const hideMyName = useMedia({ maxWidth: \"512px\" }, true);\n\n  const [state, dispatch] = useReducer(\n    (state, action) => {\n      if (action === \"TOGGLE_SHOW_MENU\") {\n        return { ...state, isShowMenuActive: !state.isShowMenuActive };\n      }\n\n      // if (action === \"HIDE_MENU\") {\n      //   return { ...state, hideMenu: useMedia({ maxWidth: \"1111px\" }) };\n      // }\n\n      // if (action === \"HIDE_MY_NAME\") {\n      //   return { ...state, hideMyName: useMedia({ maxWidth: \"512px\" }) };\n      // }\n    },\n    {\n      isShowMenuActive: false,\n      hideMenu,\n      hideMyName\n    }\n  );\n\n  return (\n    <header\n      {...currentModeStyle}\n      className={`${currentModeStyle.className} main-header`}\n    >\n      <div className=\"main-logo\">\n        <img\n          src={Logo}\n          style={{\n            marginBottom: 10,\n            marginRight: \"1em\",\n            width: 35,\n            height: 35,\n            ...(mode === \"night\" ? { filter: \"invert(100%)\" } : {})\n          }}\n          alt=\"logo\"\n        />\n        {!state.isShowMenuActive && (\n          <React.Fragment>\n            <h1\n              style={{\n                fontSize: \"1.2em\"\n              }}\n              className=\"name-logo\"\n            >\n              {!hideMyName && `Zeyad Etman`} $\n            </h1>\n            <input\n              autoFocus\n              className=\"input-path\"\n              value={`cd ${path}`}\n              onChange={e => setPath(e.target.value.split(\" \")[1] || \"\")}\n              onKeyPress={e => {\n                if (e.key === \"Enter\") {\n                  setPath(e.target.value.split(\" \")[1]);\n                  path === \"..\" && currentPath.indexOf(\"posts\") !== -1\n                    ? navigate(currentPath.replace(\"/posts\", \"\").split(\"/\")[1])\n                    : navigate(path);\n                }\n              }}\n            />\n          </React.Fragment>\n        )}\n      </div>\n\n      {(state.isShowMenuActive || !hideMenu) && (\n        <ul>\n          <li>\n            <Link to=\"/\" activeClassName=\"active-page-link\">\n              home\n            </Link>\n          </li>\n          <li>\n            <Link to=\"/projects\" activeClassName=\"active-page-link\">\n              projects\n            </Link>\n          </li>\n          <li>\n            <Link to=\"/work\" activeClassName=\"active-page-link\">\n              work\n            </Link>\n          </li>\n          <li>\n            <Link\n              to=\"/blog\"\n              activeClassName=\"active-page-link\"\n              partiallyActive={true}\n            >\n              blog\n            </Link>\n          </li>\n          <li>\n            <Link to=\"/today-i-learned\" activeClassName=\"active-page-link\">\n              {state.isShowMenuActive ? \"til\" : \"today i learned\"}\n            </Link>\n          </li>\n          <li>\n            <Link to=\"/contact\" activeClassName=\"active-page-link\">\n              contact\n            </Link>\n          </li>\n        </ul>\n      )}\n\n      {hideMenu && (\n        <a\n          href=\"javascript:void(0)\"\n          style={{\n            fontSize: \"1.5em\"\n          }}\n          onClick={() => {\n            dispatch(\"TOGGLE_SHOW_MENU\");\n          }}\n        >\n          &#9776;\n        </a>\n      )}\n    </header>\n  );\n};\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string\n};\n\nHeader.defaultProps = {\n  siteTitle: ``\n};\n\nexport default Header;\n","import React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { StaticQuery, graphql } from \"gatsby\";\nimport Switch from \"react-switch\";\nimport { dayStyles, nightStyles } from \"../styles/modeStyles\";\nimport Header from \"./header\";\nimport { connect } from \"react-redux\";\nimport \"../styles/global-styles.css\";\nimport \"prismjs/plugins/line-numbers/prism-line-numbers.css\";\nimport \"prismjs/themes/prism-coy.css\";\nimport \"../styles/prism-override.scss\";\n\nconst Layout = ({ children, mode, toggleMode, currentPath }) => {\n  const currentModeStyle = mode === \"day\" ? dayStyles : nightStyles;\n\n  useEffect(() => {\n    if (mode === \"night\") {\n      document.body.style.backgroundColor = \"#0e0e0e\";\n    } else {\n      document.body.style.backgroundColor = \"#fff\";\n    }\n  }, [mode]);\n\n  return (\n    <StaticQuery\n      query={graphql`\n        query SiteTitleQuery {\n          site {\n            siteMetadata {\n              title\n            }\n          }\n        }\n      `}\n      render={data => (\n        <div style={{ margin: \"0 auto\" }}>\n          <Header\n            siteTitle={data.site.siteMetadata.title}\n            mode={mode}\n            currentPath={currentPath}\n          />\n          {/* <Switch\n            className=\"react-switch mode-toggle\"\n            checked={mode === \"day\" ? true : false}\n            onChange={e => {\n              const modeFormatter = e ? \"day\" : \"night\";\n              toggleMode(modeFormatter);\n              try {\n                localStorage.setItem(\"mode\", modeFormatter);\n              } catch (error) {\n                console.log(error);\n              }\n            }}\n            onColor=\"#86d3ff\"\n            onHandleColor=\"#2693e6\"\n            handleDiameter={30}\n            uncheckedIcon={false}\n            checkedIcon={false}\n            boxShadow=\"0px 1px 5px rgba(0, 0, 0, 0.6)\"\n            activeBoxShadow=\"0px 0px 1px 10px rgba(0, 0, 0, 0.2)\"\n            height={20}\n            width={48}\n            id=\"material-switch\"\n          /> */}\n          <div\n            style={{\n              margin: `0 auto`,\n              maxWidth: 960,\n              padding: `0px 1.0875rem 1.45rem`,\n              paddingTop: 0\n            }}\n          >\n            <main\n              {...currentModeStyle}\n              style={{\n                ...currentModeStyle.style\n              }}\n              mode={mode}\n            >\n              {children}\n            </main>\n          </div>\n        </div>\n      )}\n    />\n  );\n};\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired\n};\n\nconst mapStateToProps = ({ mode }) => {\n  return { mode };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return { toggleMode: () => dispatch({ type: `TOGGLE_MODE` }) };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Layout);\n"],"sourceRoot":""}