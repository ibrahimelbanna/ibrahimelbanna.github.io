{"version":3,"sources":["webpack:///./src/components/ArticleSummary/index.js","webpack:///./src/pages/blog.js"],"names":["ArticleSummary","_ref","excerpt","title","date","id","timeToRead","slug","react_default","a","createElement","className","styles","articleSummary","key","gatsby_browser_entry","to","blog","pathname","location","layout","currentPath","seo","keywords","query","render","_ref2","posts","allMarkdownRemark","edges","Fragment","blogPageH1","index_es","screenName","map","_ref3","node","fields","includes","frontmatter","data","_432827260"],"mappings":"yLAIe,SAASA,EAATC,GAOZ,IANDC,EAMCD,EANDC,QACAC,EAKCF,EALDE,MACAC,EAICH,EAJDG,KACAC,EAGCJ,EAHDI,GACAC,EAECL,EAFDK,WACAC,EACCN,EADDM,KAEA,OACEC,EAAAC,EAAAC,cAAA,WAASC,UAAcC,IAAOC,eAAZ,WAAsCC,IAAKT,GAC3DG,EAAAC,EAAAC,cAAA,cACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAAMC,GAAE,IAAMT,GAASJ,GAAc,KAEvCK,EAAAC,EAAAC,cAAA,SAAOC,UAAU,gBACfH,EAAAC,EAAAC,cAAA,YAAON,GACN,UACDI,EAAAC,EAAAC,cAAA,YAAUJ,EAAV,KAAwBA,EAAa,EAAI,OAAS,OAAlD,WAGJE,EAAAC,EAAAC,cAAA,SAAIR,4CCfK,SAASe,EAAThB,GAA0C,IAAdiB,EAAcjB,EAA1BkB,SAAYD,SACzC,OACEV,EAAAC,EAAAC,cAACU,EAAA,EAAD,CAAQC,YAAaH,GACnBV,EAAAC,EAAAC,cAACY,EAAA,EAAD,CAAKnB,MAAM,OAAOoB,SAAU,qBAAuB,eACnDf,EAAAC,EAAAC,cAACK,EAAA,EAAD,CACES,MAAK,YAyBLC,OAAQ,SAAAC,GAA6C,IAAdC,EAAcD,EAA1CE,kBAAqBC,MAC9B,OACErB,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqB,SAAA,KACEtB,EAAAC,EAAAC,cAAA,MAAIC,UAAWC,IAAOmB,YAAtB,sBAEEvB,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CAAqBC,WAAY,gBAElCN,EAAMO,IACL,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,KAAH,OACGA,EAAKC,OAAO9B,KAAK+B,SAAS,SACzB9B,EAAAC,EAAAC,cAACV,EAAD,CACEG,MAAOiC,EAAKG,YAAYpC,MACxBC,KAAMgC,EAAKG,YAAYnC,KACvBC,GAAI+B,EAAK/B,GACTC,WAAY8B,EAAK9B,WACjBJ,QAASkC,EAAKlC,QACdY,IAAKsB,EAAK/B,GACVE,KAAM6B,EAAKC,OAAO9B,WA3ClCiC,KAAAC","file":"component---src-pages-blog-js-cde140b1db4f92ed327e.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"gatsby\";\nimport styles from \"./styles.module.scss\";\n\nexport default function ArticleSummary({\n  excerpt,\n  title,\n  date,\n  id,\n  timeToRead,\n  slug\n}) {\n  return (\n    <article className={`${styles.articleSummary} article`} key={id}>\n      <header>\n        <h3>\n          <Link to={`/${slug}`}>{title}</Link>{\" \"}\n        </h3>\n        <small className=\"article-meta\">\n          <span>{date}</span>\n          {\"   â€¢   \"}\n          <span>{`${timeToRead} ${timeToRead > 1 ? \"mins\" : \"min\"} read`}</span>\n        </small>\n      </header>\n      <p>{excerpt}</p>\n    </article>\n  );\n}\n","import React from \"react\";\nimport Layout from \"../components/layout\";\nimport SEO from \"../components/seo\";\nimport { StaticQuery, graphql } from \"gatsby\";\nimport ArticleSummary from \"../components/ArticleSummary/index\";\nimport { TwitterFollowButton } from \"react-twitter-embed\";\nimport \"../styles/blogpost.css\";\nimport styles from \"../styles/blog.module.scss\";\n\nexport default function blog({ location: { pathname } }) {\n  return (\n    <Layout currentPath={pathname}>\n      <SEO title=\"Blog\" keywords={[`zeyadetman`, `blog`, \"technical\"]} />\n      <StaticQuery\n        query={graphql`\n          query retrievePosts {\n            allMarkdownRemark(\n              sort: { fields: [frontmatter___date], order: DESC }\n            ) {\n              edges {\n                node {\n                  id\n                  excerpt\n                  frontmatter {\n                    title\n                    date(formatString: \"MMMM DD, YYYY\")\n                  }\n                  timeToRead\n                  fields {\n                    slug\n                  }\n                  wordCount {\n                    words\n                  }\n                }\n              }\n            }\n          }\n        `}\n        render={({ allMarkdownRemark: { edges: posts } }) => {\n          return (\n            <>\n              <h1 className={styles.blogPageH1}>\n                Writings & Thoughts\n                <TwitterFollowButton screenName={\"zeyadetman\"} />\n              </h1>\n              {posts.map(\n                ({ node }) =>\n                  !node.fields.slug.includes(\"/ar/\") && (\n                    <ArticleSummary\n                      title={node.frontmatter.title}\n                      date={node.frontmatter.date}\n                      id={node.id}\n                      timeToRead={node.timeToRead}\n                      excerpt={node.excerpt}\n                      key={node.id}\n                      slug={node.fields.slug}\n                    />\n                  )\n              )}\n            </>\n          );\n        }}\n      />\n    </Layout>\n  );\n}\n"],"sourceRoot":""}