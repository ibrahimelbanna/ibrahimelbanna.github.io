{"data":{"markdownRemark":{"html":"<p>In this post, i'll explain how to pass a state between components in Reactjs.\nWe'll build a small 'How many books did you read?' app, in this application, we\nhave two main components one big called 'Library' and another small 'Book', we have 3 books in the library state and each book has its own state. check any book to count as read. <a href=\"https://zeyadetman.github.io/howmanybooks/\">try the app here</a></p>\n<p><strong>Let's begin with code:</strong></p>\n<h2>Passing state from parent to child</h2>\n<p>In our Library component we have this state</p>\n<pre><code class=\"language-javascript\">this.state = {\n  reads: 0,\n  books: [\n    {\n      name: \"Zero to one\",\n      isbn: \"9780804139298\",\n      author: \"Peter Thiel\",\n      cover: \"https://images.gr-assets.com/books/1414347376l/18050143.jpg\",\n      status: false\n    },\n    {\n      name: \"The Manager's Path\",\n      isbn: \"9781491973899\",\n      author: \"Camille Fournier\",\n      cover: \"https://images.gr-assets.com/books/1484107737l/33369254.jpg\",\n      status: false\n    },\n    {\n      name: \"Calculus, Better Explained\",\n      isbn: \"9781470070700\",\n      author: \"Kalid Azad\",\n      cover: \"https://images.gr-assets.com/books/1448590460l/27993945.jpg\",\n      status: false\n    }\n  ]\n};\n</code></pre>\n<p>and want to create <code>this.state.books.length</code> - as a number - <code>Book</code> components each have props from the <code>books</code> array of the <code>Library</code> component's state. We have to deal with the two components.</p>\n<p><strong>First</strong> with the parent, we have to create the <code>Book</code> component <code>this.state.books.length</code> - as a number - times, and pass our diffrent values to them Like this:</p>\n<p><a href=\"https://github.com/zeyadetman/howmanybooks/blob/master/src/components/Library/Library.jsx\">Full Code here</a></p>\n<pre><code class=\"language-javascript\">{\n  this.state.books.map((_book, _id) => {\n    return (\n      &#x3C;Book\n        handleCounter={this.handleCounter}\n        key={_id}\n        id={_book.isbn}\n        name={_book.name}\n        isbn={_book.isbn}\n        author={_book.author}\n        cover={_book.cover}\n      />\n    );\n  });\n}\n</code></pre>\n<p><em>Note</em> ignore <code>handleCounter</code> for now.</p>\n<p><strong>Second</strong> with the child <code>Book</code>, we have the values from parent, let's use them:</p>\n<p><a href=\"https://github.com/zeyadetman/howmanybooks/blob/master/src/components/Book/Book.jsx\">Full code here</a></p>\n<pre><code class=\"language-javascript\">...\nrender() {\n    return (\n        &#x3C;Card>\n            &#x3C;Image\n                src={this.props.cover}\n                alt=\"Book cover\"\n...\n</code></pre>\n<p>Until now we created 3 <code>Book</code> components from the parent component <code>Library</code>, and set their values from the parent state.\nEasy! Right?\nGreat, let's begin the second part</p>\n<h2>Passing state from child to parent</h2>\n<p>In this section, we want to handle the number of books you read by checking on each book checkbox.</p>\n<p>In our <code>Book</code> we have this state</p>\n<p><a href=\"https://github.com/zeyadetman/howmanybooks/blob/master/src/components/Book/Book.jsx\">Full code here</a></p>\n<pre><code class=\"language-jsx\">this.state = {\n  status: false,\n  id: this.props.id\n};\n</code></pre>\n<p><em>Note</em> don't forget to pass <code>props</code> to component's constructor.</p>\n<p><code>status</code> means if you read this book or not, and its default value is <code>false</code>, <code>id</code> is the id of this book and i set it by book id like we learned in the previous section.</p>\n<p>we need to handle change of this status then update the books array in the parent state.</p>\n<p>In our <code>Book</code> component, we'll add a checkbox that recieve the change of the book status and pass <code>this.handleChange</code> to its <code>onChange</code> event like this:</p>\n<p><a href=\"https://github.com/zeyadetman/howmanybooks/blob/master/src/components/Book/Book.jsx\">Full code here</a></p>\n<pre><code class=\"language-js\">&#x3C;input type=\"checkbox\" name=\"example\" onChange={this.handleChange} />\n</code></pre>\n<p>you need to bind the function first, then update the <code>Book</code> state with the new status, after updating the child state we'll update the state of the parent <code>Library</code> like this:</p>\n<p><a href=\"https://github.com/zeyadetman/howmanybooks/blob/master/src/components/Book/Book.jsx\">Full code here</a></p>\n<pre><code class=\"language-js\">handleChange() {\n        this.setState({status: !this.state.status}, this.updateLibraryCount);\n    }\n\nupdateLibraryCount() {\n        this.props.handleCounter(this.state);\n    }\n</code></pre>\n<p>In <code>updateLibraryCount</code> we used <code>handleCounter</code> function of the <code>Library</code> as a prop, then passed the <code>Book</code> state to it, Now the <code>Library</code> sees the <code>Book</code> state, Great! let's use it.</p>\n<p><a href=\"https://github.com/zeyadetman/howmanybooks/blob/master/src/components/Library/Library.jsx\">Full Code here</a></p>\n<pre><code class=\"language-js\">handleCounter(_State) {\n        //Get the index of this book by searching by its unique isbn\n        const ObjNum = this.state.books.findIndex(\n            _book => _book.isbn === _State.id\n        );\n\n        //then update its value in the Library component\n        this.setState(\n            {\n                books: update(\n                    ObjNum,\n                    {...this.state.books[ObjNum], status: _State.status},\n                    this.state.books\n                )\n            },\n            () => {\n                //this is a callback to handle the new change of the book status\n                //and increment the reads\n                const _read = this.state.books.filter(_book =>\n                    _book.status === true\n                ).length;\n                this.setState({reads: _read});\n            }\n        );\n    }\n</code></pre>\n<p>I hope you're understand how to pass the state from the parent to child and vice versa, Here's the <a href=\"https://github.com/zeyadetman/howmanybooks\">full code</a>, and this is the <a href=\"https://zeyadetman.github.io/projects/2018/07/25/How-to-pass-state-between-components-in-reactjs.html\">original post on my blog</a>. If you have questions, feel free to ask in comments or <a href=\"zeyadetman@gmail.com\">email</a>.</p>","fields":{"slug":"blog/posts/How-to-pass-state-between-components-in-reactjs/"},"frontmatter":{"date":"July 25, 2018","title":"How to pass state between components in reactjs (Full Code)","toArabic":null},"timeToRead":4,"wordCount":{"words":401}}},"pageContext":{"slug":"blog/posts/How-to-pass-state-between-components-in-reactjs/","toArabic":null}}