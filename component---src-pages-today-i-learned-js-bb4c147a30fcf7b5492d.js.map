{"version":3,"sources":["webpack:///./src/pages/today-i-learned.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./static/images/favicon.ico","webpack:///./src/components/seo.js","webpack:///./src/styles/modeStyles.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_layout__WEBPACK_IMPORTED_MODULE_1__","_components_seo__WEBPACK_IMPORTED_MODULE_2__","react_redux__WEBPACK_IMPORTED_MODULE_4__","connect","_ref2","mode","_ref","tils","title","date","body","a","createElement","height","style","width","scrolling","src","frameBorder","allowtransparency","allowFullScreen","href","display","flexDirection","alignItems","marginTop","alt","gridTemplateColumns","gridGap","map","tip","className","key","marginBottom","paddingLeft","dateTime","d","graphql","StaticQueryContext","StaticQuery","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3___default","_parse_path__WEBPACK_IMPORTED_MODULE_4__","React","createContext","props","Consumer","staticQueryData","data","query","render","children","Error","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","p","SEO","description","lang","meta","keywords","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_4__","detailsQuery","metaDescription","site","siteMetadata","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","_public_static_d_1025518380_json__WEBPACK_IMPORTED_MODULE_0__","defaultProps","array","arrayOf","dayStyles","color","nightStyles","Header","siteTitle","currentModeStyle","react_default","Logo","marginRight","fontSize","gatsby_browser_entry","to","Layout","toggleMode","useEffect","document","backgroundColor","margin","components_header","react_switch_default","checked","onChange","onColor","onHandleColor","handleDiameter","uncheckedIcon","checkedIcon","boxShadow","activeBoxShadow","id","maxWidth","padding","paddingTop","_2994927498","node","dispatch","type"],"mappings":"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","file":"component---src-pages-today-i-learned-js-bb4c147a30fcf7b5492d.js","sourcesContent":["import React from \"react\";\nimport Layout from \"../components/layout\";\nimport SEO from \"../components/seo\";\nimport \"../styles/projects.css\";\nimport { connect } from \"react-redux\";\n\nconst Til = ({ mode }) => {\n  const tils = [\n    {\n      title: \"Gradient text style in CSS\",\n      date: \"2019-03-08\",\n      body: (\n        <iframe\n          height=\"265\"\n          style={{ width: \"100%\" }}\n          scrolling=\"no\"\n          title=\"gradient text hover\"\n          src=\"//codepen.io/zeyadetman/embed/preview/rRydWv/?height=265&theme-id=dark&default-tab=css,result\"\n          frameBorder=\"no\"\n          allowtransparency=\"true\"\n          allowFullScreen={true}\n        >\n          See the Pen{\" \"}\n          <a href=\"https://codepen.io/zeyadetman/pen/rRydWv/\">\n            gradient text hover\n          </a>{\" \"}\n          by Zeyad Etman (\n          <a href=\"https://codepen.io/zeyadetman\">@zeyadetman</a>) on{\" \"}\n          <a href=\"https://codepen.io\">CodePen</a>.\n        </iframe>\n      )\n    }\n  ];\n  return (\n    <Layout>\n      <SEO title=\"Today I Learned\" />\n      <h1\n        style={{\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignItems: \"center\"\n        }}\n      >\n        Today I Learned\n        <a\n          style={{ marginTop: 5 }}\n          href=\"https://stackexchange.com/users/6213143/zeyad-etman\"\n        >\n          <img\n            src={`https://stackexchange.com/users/flair/6213143.png?theme=${\n              mode === \"night\" ? \"dark\" : \"day\"\n            }`}\n            width=\"208\"\n            height=\"58\"\n            alt=\"profile for Zeyad Etman on Stack Exchange, a network of free, community-driven Q&amp;A sites\"\n            title=\"profile for Zeyad Etman on Stack Exchange, a network of free, community-driven Q&amp;A sites\"\n          />\n        </a>\n      </h1>\n      <div\n        style={{\n          display: \"grid\",\n          gridTemplateColumns: \"repeat(auto-fill, minmax(320px, 1fr))\",\n          gridGap: 15\n        }}\n      >\n        {tils.map(tip => (\n          <div className=\"card\" key={tip.title}>\n            <h2 style={{ marginBottom: 5, paddingLeft: 10 }}>{tip.title}</h2>\n            <time style={{ paddingLeft: 10 }} dateTime={tip.date}>\n              {tip.date}\n            </time>\n            <div\n              style={{\n                marginTop: 25\n              }}\n            >\n              {tip.body}\n            </div>\n          </div>\n        ))}\n      </div>\n    </Layout>\n  );\n};\n\nconst mapStateToProps = ({ mode }) => {\n  return { mode };\n};\n\nexport default connect(mapStateToProps)(Til);\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","module.exports = __webpack_public_path__ + \"static/favicon-536c95ef75715eb3b2253c240b66eaf4.ico\";","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Helmet from \"react-helmet\";\nimport { StaticQuery, graphql } from \"gatsby\";\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={data => {\n        const metaDescription =\n          description || data.site.siteMetadata.description;\n        return (\n          <Helmet\n            htmlAttributes={{\n              lang\n            }}\n            title={title}\n            titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n            meta={[\n              {\n                name: `description`,\n                content: metaDescription\n              },\n              {\n                property: `og:title`,\n                content: title\n              },\n              {\n                property: `og:description`,\n                content: metaDescription\n              },\n              {\n                property: `og:type`,\n                content: `website`\n              },\n              {\n                name: `twitter:card`,\n                content: `summary`\n              },\n              {\n                name: `twitter:creator`,\n                content: data.site.siteMetadata.author\n              },\n              {\n                name: `twitter:title`,\n                content: title\n              },\n              {\n                name: `twitter:description`,\n                content: metaDescription\n              }\n            ]\n              .concat(\n                keywords.length > 0\n                  ? {\n                      name: `keywords`,\n                      content: keywords.join(`, `)\n                    }\n                  : []\n              )\n              .concat(meta)}\n          />\n        );\n      }}\n    />\n  );\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: []\n};\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired\n};\n\nexport default SEO;\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`;\n","export const dayStyles = {\n  style: {\n    color: \"rgb(36, 41, 46)\"\n  },\n  className: \"day-mode\"\n};\n\nexport const nightStyles = {\n  style: {\n    color: \"#fff\"\n  },\n  className: \"night-mode\"\n};\n","import { Link } from \"gatsby\";\nimport PropTypes from \"prop-types\";\nimport React, { useEffect } from \"react\";\nimport \"../styles/header.css\";\nimport Logo from \"../../static/images/favicon.ico\";\nimport { dayStyles, nightStyles } from \"../styles/modeStyles\";\n\nconst Header = ({ siteTitle, mode }) => {\n  const currentModeStyle = mode === \"day\" ? dayStyles : nightStyles;\n\n  return (\n    <header\n      {...currentModeStyle}\n      className={`${currentModeStyle.className} main-header`}\n    >\n      <div className=\"main-logo\">\n        <img\n          src={Logo}\n          style={{\n            marginBottom: 10,\n            marginRight: \"1em\",\n            width: 50,\n            height: 50\n          }}\n          alt=\"logo\"\n        />\n        <h1\n          style={{\n            marginRight: 15,\n            fontSize: \"1.7em\"\n          }}\n        >\n          <span style={{ color: \"#fdbd12\" }}>Z</span>eyad{\" \"}\n          <span style={{ color: \"#fdbd12\" }}>E</span>tman\n        </h1>\n      </div>\n      <ul>\n        <li>\n          <Link to=\"/\">home</Link>\n        </li>\n        <li>\n          <Link to=\"/projects\">projects</Link>\n        </li>\n        <li>\n          <Link to=\"/work\">work</Link>\n        </li>\n        <li>\n          <Link to=\"/blog\">blog</Link>\n        </li>\n        <li>\n          <Link to=\"/today-i-learned\">today i learned</Link>\n        </li>\n        <li>\n          <Link to=\"/contact\">contact</Link>\n        </li>\n      </ul>\n    </header>\n  );\n};\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string\n};\n\nHeader.defaultProps = {\n  siteTitle: ``\n};\n\nexport default Header;\n","import React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { StaticQuery, graphql } from \"gatsby\";\nimport Switch from \"react-switch\";\nimport { dayStyles, nightStyles } from \"../styles/modeStyles\";\nimport Header from \"./header\";\nimport { connect } from \"react-redux\";\nimport \"../styles/global-styles.css\";\n\nconst Layout = ({ children, mode, toggleMode }) => {\n  const currentModeStyle = mode === \"day\" ? dayStyles : nightStyles;\n\n  useEffect(() => {\n    if (mode === \"night\") {\n      document.body.style.backgroundColor = \"#0e0e0e\";\n    } else {\n      document.body.style.backgroundColor = \"#fff\";\n    }\n  });\n\n  return (\n    <StaticQuery\n      query={graphql`\n        query SiteTitleQuery {\n          site {\n            siteMetadata {\n              title\n            }\n          }\n        }\n      `}\n      render={data => (\n        <div style={{ margin: \"0 auto\" }}>\n          <Header siteTitle={data.site.siteMetadata.title} mode={mode} />\n          <Switch\n            className=\"react-switch mode-toggle\"\n            checked={mode === \"day\"}\n            onChange={toggleMode}\n            onColor=\"#86d3ff\"\n            onHandleColor=\"#2693e6\"\n            handleDiameter={30}\n            uncheckedIcon={false}\n            checkedIcon={false}\n            boxShadow=\"0px 1px 5px rgba(0, 0, 0, 0.6)\"\n            activeBoxShadow=\"0px 0px 1px 10px rgba(0, 0, 0, 0.2)\"\n            height={20}\n            width={48}\n            id=\"material-switch\"\n          />\n          <div\n            style={{\n              margin: `0 auto`,\n              maxWidth: 960,\n              padding: `0px 1.0875rem 1.45rem`,\n              paddingTop: 0\n            }}\n          >\n            <main\n              {...currentModeStyle}\n              style={{\n                ...currentModeStyle.style,\n                ...{ margin: \"0 auto\" }\n              }}\n              mode={mode}\n            >\n              {children}\n            </main>\n          </div>\n        </div>\n      )}\n    />\n  );\n};\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired\n};\n\nconst mapStateToProps = ({ mode }) => {\n  return { mode };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return { toggleMode: () => dispatch({ type: `TOGGLE_MODE` }) };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Layout);\n"],"sourceRoot":""}