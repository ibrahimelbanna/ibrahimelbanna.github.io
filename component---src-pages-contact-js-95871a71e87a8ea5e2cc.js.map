{"version":3,"sources":["webpack:///./src/pages/contact.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./static/images/favicon.ico","webpack:///./src/styles/modeStyles.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js","webpack:///./src/components/seo.js"],"names":["__webpack_require__","r","__webpack_exports__","d","Contact","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_layout__WEBPACK_IMPORTED_MODULE_1__","_components_seo__WEBPACK_IMPORTED_MODULE_2__","react_twitter_embed__WEBPACK_IMPORTED_MODULE_3__","a","createElement","title","style","display","gridTemplateColumns","gridGap","gridColumn","textAlign","fontSize","fontWeight","background","lineHeight","color","screenName","options","size","graphql","StaticQueryContext","StaticQuery","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3___default","_parse_path__WEBPACK_IMPORTED_MODULE_4__","React","createContext","props","Consumer","staticQueryData","data","query","render","children","Error","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","_ref","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","p","dayStyles","className","nightStyles","Header","siteTitle","currentModeStyle","mode","react_default","src","Logo","marginBottom","marginRight","width","height","alt","gatsby_browser_entry","to","defaultProps","Layout","toggleMode","useEffect","document","body","backgroundColor","margin","components_header","site","siteMetadata","react_switch_default","checked","onChange","onColor","onHandleColor","handleDiameter","uncheckedIcon","checkedIcon","boxShadow","activeBoxShadow","id","maxWidth","padding","paddingTop","_2994927498","node","connect","_ref2","dispatch","type","SEO","description","lang","meta","keywords","console","log","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_4__","detailsQuery","metaDescription","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","_public_static_d_1025518380_json__WEBPACK_IMPORTED_MODULE_0__","array","arrayOf"],"mappings":"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","file":"component---src-pages-contact-js-95871a71e87a8ea5e2cc.js","sourcesContent":["import React from \"react\";\nimport Layout from \"../components/layout\";\nimport SEO from \"../components/seo\";\nimport { TwitterFollowButton } from \"react-twitter-embed\";\n\nexport default function Contact() {\n  return (\n    <Layout>\n      <SEO title=\"Contact\" />\n      <div\n        style={{\n          display: \"grid\",\n          gridTemplateColumns: \"repeat(auto-fill, minmax(250px, 1fr))\",\n          gridGap: 20\n        }}\n      >\n        <div\n          style={{\n            gridColumn: \"1/3\"\n          }}\n        >\n          <h1>Hi! It's my pleasure to hear from you.</h1>\n          <p>\n            I like code and anything related, I guess you too! so if you have\n            something to share with me, contact me:\n            <p\n              style={{\n                textAlign: \"center\",\n                fontSize: \"2em\",\n                fontWeight: 700,\n                background: \"#fdbd12\",\n                lineHeight: \"84px\",\n                color: \"#000\"\n              }}\n            >\n              zeyadetman@gmail.com\n            </p>\n          </p>\n        </div>\n        <div style={{ textAlign: \"center\" }}>\n          <h1>Wanna be friends?</h1>\n          <TwitterFollowButton\n            screenName={\"zeyadetman\"}\n            options={{ size: \"large\" }}\n          />\n        </div>\n      </div>\n    </Layout>\n  );\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","module.exports = __webpack_public_path__ + \"static/favicon-536c95ef75715eb3b2253c240b66eaf4.ico\";","export const dayStyles = {\n  style: {\n    color: \"rgb(36, 41, 46)\"\n  },\n  className: \"day-mode\"\n};\n\nexport const nightStyles = {\n  style: {\n    color: \"#fff\"\n  },\n  className: \"night-mode\"\n};\n","import { Link } from \"gatsby\";\nimport PropTypes from \"prop-types\";\nimport React, { useEffect } from \"react\";\nimport \"../styles/header.css\";\nimport Logo from \"../../static/images/favicon.ico\";\nimport { dayStyles, nightStyles } from \"../styles/modeStyles\";\n\nconst Header = ({ siteTitle, mode }) => {\n  const currentModeStyle = mode === \"day\" ? dayStyles : nightStyles;\n\n  return (\n    <header\n      {...currentModeStyle}\n      className={`${currentModeStyle.className} main-header`}\n    >\n      <div className=\"main-logo\">\n        <img\n          src={Logo}\n          style={{\n            marginBottom: 10,\n            marginRight: \"1em\",\n            width: 50,\n            height: 50\n          }}\n          alt=\"logo\"\n        />\n        <h1\n          style={{\n            marginRight: 15,\n            fontSize: \"1.7em\"\n          }}\n        >\n          <span style={{ color: \"#fdbd12\" }}>Z</span>eyad{\" \"}\n          <span style={{ color: \"#fdbd12\" }}>E</span>tman\n        </h1>\n      </div>\n      <ul>\n        <li>\n          <Link to=\"/\">home</Link>\n        </li>\n        <li>\n          <Link to=\"/projects\">projects</Link>\n        </li>\n        <li>\n          <Link to=\"/work\">work</Link>\n        </li>\n        <li>\n          <Link to=\"/blog\">blog</Link>\n        </li>\n        <li>\n          <Link to=\"/contact\">contact</Link>\n        </li>\n      </ul>\n    </header>\n  );\n};\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string\n};\n\nHeader.defaultProps = {\n  siteTitle: ``\n};\n\nexport default Header;\n","import React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { StaticQuery, graphql } from \"gatsby\";\nimport Switch from \"react-switch\";\nimport { dayStyles, nightStyles } from \"../styles/modeStyles\";\nimport Header from \"./header\";\nimport { connect } from \"react-redux\";\nimport \"../styles/global-styles.css\";\n\nconst Layout = ({ children, mode, toggleMode }) => {\n  const currentModeStyle = mode === \"day\" ? dayStyles : nightStyles;\n\n  useEffect(() => {\n    if (mode === \"night\") {\n      document.body.style.backgroundColor = \"#0e0e0e\";\n    } else {\n      document.body.style.backgroundColor = \"#fff\";\n    }\n  });\n\n  return (\n    <StaticQuery\n      query={graphql`\n        query SiteTitleQuery {\n          site {\n            siteMetadata {\n              title\n            }\n          }\n        }\n      `}\n      render={data => (\n        <div style={{ margin: \"0 auto\" }}>\n          <Header siteTitle={data.site.siteMetadata.title} mode={mode} />\n          <Switch\n            className=\"react-switch mode-toggle\"\n            checked={mode === \"day\"}\n            onChange={toggleMode}\n            onColor=\"#86d3ff\"\n            onHandleColor=\"#2693e6\"\n            handleDiameter={30}\n            uncheckedIcon={false}\n            checkedIcon={false}\n            boxShadow=\"0px 1px 5px rgba(0, 0, 0, 0.6)\"\n            activeBoxShadow=\"0px 0px 1px 10px rgba(0, 0, 0, 0.2)\"\n            height={20}\n            width={48}\n            id=\"material-switch\"\n          />\n          <div\n            style={{\n              margin: `0 auto`,\n              maxWidth: 960,\n              padding: `0px 1.0875rem 1.45rem`,\n              paddingTop: 0\n            }}\n          >\n            <main\n              {...currentModeStyle}\n              style={{\n                ...currentModeStyle.style,\n                ...{ margin: \"0 auto\" }\n              }}\n              mode={mode}\n            >\n              {children}\n            </main>\n          </div>\n        </div>\n      )}\n    />\n  );\n};\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired\n};\n\nconst mapStateToProps = ({ mode }) => {\n  return { mode };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return { toggleMode: () => dispatch({ type: `TOGGLE_MODE` }) };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Layout);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Helmet from \"react-helmet\";\nimport { StaticQuery, graphql } from \"gatsby\";\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  console.log(title);\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={data => {\n        const metaDescription =\n          description || data.site.siteMetadata.description;\n        return (\n          <Helmet\n            htmlAttributes={{\n              lang\n            }}\n            title={title}\n            titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n            meta={[\n              {\n                name: `description`,\n                content: metaDescription\n              },\n              {\n                property: `og:title`,\n                content: title\n              },\n              {\n                property: `og:description`,\n                content: metaDescription\n              },\n              {\n                property: `og:type`,\n                content: `website`\n              },\n              {\n                name: `twitter:card`,\n                content: `summary`\n              },\n              {\n                name: `twitter:creator`,\n                content: data.site.siteMetadata.author\n              },\n              {\n                name: `twitter:title`,\n                content: title\n              },\n              {\n                name: `twitter:description`,\n                content: metaDescription\n              }\n            ]\n              .concat(\n                keywords.length > 0\n                  ? {\n                      name: `keywords`,\n                      content: keywords.join(`, `)\n                    }\n                  : []\n              )\n              .concat(meta)}\n          />\n        );\n      }}\n    />\n  );\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: []\n};\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired\n};\n\nexport default SEO;\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}